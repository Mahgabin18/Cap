{"ast":null,"code":"var _jsxFileName = \"/Users/flabicamaharjan/Desktop/Cap/client/src/components/WordSearch.js\";\nimport React, { useState, Component } from \"react\";\nimport { useNavigate, Link } from \"react-router-dom\";\nimport Unsplash, { toJson } from \"unsplash-js\"; //unplash api import \n\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport axios from 'axios';\nimport MainPage from './MainPage';\nimport Emotions from '../ models/Emotions'; //import Link, { LinkedComponent } from 'valuelink';\n//import { Input } from 'valuelink/tags';\n//const valueArray = []; //initialize empty array\n//export default function WordSearch() \n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass WordSearch extends Component {\n  constructor() {\n    var _s = $RefreshSig$();\n\n    super(...arguments);\n    this.state = {\n      isHappy: false,\n      isSad: false,\n      isMad: false,\n      isExcited: false,\n      isLonely: false,\n      words: []\n    };\n\n    this.onChangeHappy = event => {\n      event.preventDefault();\n      console.log(event);\n      console.log(\"happy\");\n      this.setState(initialState => ({\n        isHappy: !initialState.isHappy //here?\n\n      })); //or here?\n      // value = {wordInfo.isHappy}\n    };\n\n    this.onChangeSad = () => {\n      this.setState(initialState => ({\n        isSad: !initialState.isSad\n      }));\n    };\n\n    this.onChangeMad = () => {\n      this.setState(initialState => ({\n        isMad: !initialState.isMad\n      }));\n    };\n\n    this.onChangeExcited = () => {\n      this.setState(initialState => ({\n        isExcited: !initialState.isExcited\n      }));\n    };\n\n    this.onChangeLonely = () => {\n      this.setState(initialState => ({\n        isLonely: !initialState.isLonely\n      }));\n    };\n\n    this.HandleClick = _s(() => {\n      _s();\n\n      let navigate = useNavigate();\n      let path = `main`;\n      navigate(path);\n    }, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n      return [useNavigate];\n    });\n\n    this.onSubmit = e => {\n      e.preventDefault(); // if (this.state.isHappy === true){\n      //   word = 'happy';\n      //   addEntryClick();\n      // }\n\n      console.log(\"submitted\");\n      console.log(this.state);\n      console.log(this.wordInfo); // useNavigate('/main')\n      // let navigate = useNavigate();\n      // this.props.navigate(\"/main\");\n    };\n  }\n\n  // const navigate = useNavigate();\n  // PerformNav = () => {  \n  //   this.props.navigate(\"/main\");\n  // }\n  //render step \n  render() {\n    // const navigate = useNavigate();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"What are You Feeling?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.onSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-check\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-check-label\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: this.state.isHappy,\n              onChange: this.onChangeHappy,\n              className: \"form-check-input\" // value = {wordInfo.happy}\n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 19\n            }, this), \"Happy\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-check\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-check-label\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: this.state.isSad,\n              onChange: this.onChangeSad,\n              className: \"form-check-input\" // value = {wordInfo.sad}\n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 19\n            }, this), \"Sad\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-check\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-check-label\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: this.state.isMad,\n              onChange: this.onChangeMad,\n              className: \"form-check-input\" // value = {wordInfo.mad}\n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 19\n            }, this), \"Mad\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-check\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-check-label\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: this.state.isExcited,\n              onChange: this.onChangeExcited,\n              className: \"form-check-input\" // value = {wordInfo.excited}\n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 19\n            }, this), \"Excited\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-check\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-check-label\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: this.state.isLonely,\n              onChange: this.onChangeLonely,\n              className: \"form-check-input\" // value = {wordInfo.lonely}\n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 19\n            }, this), \"Lonely\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/main\",\n            state: this.state.words,\n            className: \"btn btn-primary\",\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 11\n    }, this);\n  }\n\n} // function WithNavigate(props) {\n//   let navigate = useNavigate();\n//   return <WordSearch {...props} navigate={navigate} />\n// }\n\n\nexport default WordSearch; // const [query, setQuery] = useState(\"\");\n// console.log(query);\n//     const searchPhotos = async (e) => \n//     {\n//         e.preventDefault();\n//         console.log(\"Submitting the Form\")\n//     };\n//  function WordSearch() {\n//     const [checked, setChecked] = React.useState(false);\n//     const handleChange = () => {\n//         setChecked(!checked);\n//     }\n//     const unsplash = new Unsplash({\n//         accessKey: \"your_Access_Key\",\n//       }\n//     );\n//     const [state, setState] = React.useState();\n// const [word, setWord] = useState(\"\");\n// console.log(word);\n// render() {\n//     return (\n//     //  className=\"Words\">\n//          className=\"heading-container\">\n//             className=\"title\">What are you Feeling?</h1> \n//         v>\n//          className=\"words-container\">\n//             m onSubmit={this.onSubmit}>\n//                  className=\"form-check\">\n//                     el className=\"form-check-label\">\n//                     ut type=\"checkbox\"\n//                         ked={this.state.isHappy}\n//                         ange={this.onChangeHappy}\n//                         sName=\"form-check-input\"\n//                     y\n//                     bel>\n//                 v>\n//                  className=\"form-check\">\n//                     el className=\"form-check-label\">\n//                     ut type=\"checkbox\"\n//                         ked={this.state.isSad}\n//                         ange={this.onChangeSad}\n//                         sName=\"form-check-input\"\n// \n//                     bel>\n//                 v>\n//                  className=\"form-check\">\n//                     el className=\"form-check-label\">\n//                     ut type=\"checkbox\"\n//                         ked={this.state.isMad}\n//                         ange={this.onChangeMad}\n//                         sName=\"form-check-input\"\n// \n//                     bel>\n//                 v>\n//                  className=\"form-check\">\n//                     el className=\"form-check-label\">\n//                     ut type=\"checkbox\"\n//                         ked={this.state.isExcited}\n//                         ange={this.onChangeExcited}\n//                         sName=\"form-check-input\"\n//                     ted\n//                     bel>\n//                 v>\n//                  className=\"form-check\">\n//                     el className=\"form-check-label\">\n//                     ut type=\"checkbox\"\n//                         ked={this.state.isLonely}\n//                         ange={this.onChangeLonely}\n//                         sName=\"form-check-input\"\n//                     ly\n//                     bel>\n//                 v>\n//                  className=\"form-group\">\n//                     ton className=\"btn btn-success\">\n// \n//                     tton>\n//                 v>\n//             rm>\n//             BUNCH OF CHECKBOXES WITH WORDS TO SELECT and also a SUBMIT BUTTON to send the results and stuff \n//             m>\n//                 >\n//                     ckbox \n//                         l=\"happy :)\"\n//                         e={checked}\n//                         ange={handleChange}\n//                 v> \n//                  v>\n//                     ton type=\"submit\">Submit</button>\n//                 v> \n//                 s \"My Value\" checked? {checked.toString()}</p>\n//             rm> */}\n//                 </div>\n//                 // </div>\n//         );\n//     }\n// }\n//export default WordSearch;\n// const Checkbox = ({ label, value, onChange }) => {\n//     return (\n//       <label>\n//         <input type=\"checkbox\" checked={value} onChange={onChange} />\n//         {label}\n//       </label>\n//     );\n//   };\n// return (//does that <> do something? \n//   <>  \n//     <form className=\"form\">\n//       <label className=\"label\" htmlFor=\"query\">\n//         {\" \"}\n//         📷\n//       </label>\n//       <input\n//         type=\"text\"\n//         name=\"query\"\n//         className=\"input\"\n//         placeholder={`Try \"dog\" or \"apple\"`}\n//         value={query}\n//         onChange={(e) => setQuery(e.target.value)}\n//       />\n//       <button type=\"submit\" className=\"button\">\n//         Search\n//       </button>\n//     </form>\n//   </>\n// );\n// }\n\n/* import React, { useState } from \"react\";\n\nfunction WordSearch() {\n    \nreturn (\n <div>\n </div>\n);\n}\nexport default WordSearch;  */\n// export default WordSearch;","map":{"version":3,"sources":["/Users/flabicamaharjan/Desktop/Cap/client/src/components/WordSearch.js"],"names":["React","useState","Component","useNavigate","Link","Unsplash","toJson","axios","MainPage","Emotions","WordSearch","state","isHappy","isSad","isMad","isExcited","isLonely","words","onChangeHappy","event","preventDefault","console","log","setState","initialState","onChangeSad","onChangeMad","onChangeExcited","onChangeLonely","HandleClick","navigate","path","onSubmit","e","wordInfo","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,IAAtB,QAAiC,kBAAjC;AACA,OAAOC,QAAP,IAAmBC,MAAnB,QAAiC,aAAjC,C,CAAgD;;AAChD,OAAO,yDAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AAEA,OAAOC,QAAP,MAAqB,qBAArB,C,CAEA;AACA;AAGA;AAIA;;;;AACA,MAAMC,UAAN,SAAyBR,SAAzB,CACA;AAAA;AAAA;;AAAA;AAAA,SAgBIS,KAhBJ,GAgBY;AACJC,MAAAA,OAAO,EAAE,KADL;AAEJC,MAAAA,KAAK,EAAE,KAFH;AAGJC,MAAAA,KAAK,EAAE,KAHH;AAIJC,MAAAA,SAAS,EAAE,KAJP;AAKJC,MAAAA,QAAQ,EAAE,KALN;AAMJC,MAAAA,KAAK,EAAE;AANH,KAhBZ;;AAAA,SAyBKC,aAzBL,GAyBsBC,KAAD,IAAW;AACzBA,MAAAA,KAAK,CAACC,cAAN;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACC,WAAKC,QAAL,CAAcC,YAAY,KAAK;AAC7BZ,QAAAA,OAAO,EAAE,CAACY,YAAY,CAACZ,OADM,CAE7B;;AAF6B,OAAL,CAA1B,EAJwB,CASxB;AACA;AACF,KApCN;;AAAA,SAsCIa,WAtCJ,GAsCkB,MAAM;AAChB,WAAKF,QAAL,CAAcC,YAAY,KAAK;AAC7BX,QAAAA,KAAK,EAAE,CAACW,YAAY,CAACX;AADQ,OAAL,CAA1B;AAGF,KA1CN;;AAAA,SA4CKa,WA5CL,GA4CmB,MAAM;AACjB,WAAKH,QAAL,CAAcC,YAAY,KAAK;AAC7BV,QAAAA,KAAK,EAAE,CAACU,YAAY,CAACV;AADQ,OAAL,CAA1B;AAGF,KAhDN;;AAAA,SAkDKa,eAlDL,GAkDuB,MAAM;AACrB,WAAKJ,QAAL,CAAcC,YAAY,KAAK;AAC7BT,QAAAA,SAAS,EAAE,CAACS,YAAY,CAACT;AADI,OAAL,CAA1B;AAGF,KAtDN;;AAAA,SAuDKa,cAvDL,GAuDsB,MAAM;AACpB,WAAKL,QAAL,CAAcC,YAAY,KAAK;AAC7BR,QAAAA,QAAQ,EAAE,CAACQ,YAAY,CAACR;AADK,OAAL,CAA1B;AAIF,KA5DN;;AAAA,SA8DMa,WA9DN,MA8DoB,MAAK;AAAA;;AACnB,UAAIC,QAAQ,GAAG3B,WAAW,EAA1B;AACA,UAAI4B,IAAI,GAAI,MAAZ;AACAD,MAAAA,QAAQ,CAACC,IAAD,CAAR;AACD,KAlEL;AAAA,cA+DqB5B,WA/DrB;AAAA;;AAAA,SAuEK6B,QAvEL,GAuEiBC,CAAD,IAAO;AACjBA,MAAAA,CAAC,CAACb,cAAF,GADiB,CAGjB;AACA;AACA;AACA;;AAEAC,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKX,KAAjB;AACAU,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKY,QAAjB,EAViB,CAWjB;AACA;AACA;AACD,KArFL;AAAA;;AAuFM;AACF;AACA;AACA;AAKE;AACAC,EAAAA,MAAM,GAAG;AAEP;AAGA,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAM,QAAA,QAAQ,EAAE,KAAKH,QAArB;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,iCACE;AAAO,YAAA,SAAS,EAAC,kBAAjB;AAAA,oCACE;AAAO,cAAA,IAAI,EAAC,UAAZ;AACE,cAAA,OAAO,EAAE,KAAKrB,KAAL,CAAWC,OADtB;AAEE,cAAA,QAAQ,EAAE,KAAKM,aAFjB;AAGE,cAAA,SAAS,EAAC,kBAHZ,CAIE;;AAJF;AAAA;AAAA;AAAA;AAAA,oBADF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAYE;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,iCACE;AAAO,YAAA,SAAS,EAAC,kBAAjB;AAAA,oCACE;AAAO,cAAA,IAAI,EAAC,UAAZ;AACE,cAAA,OAAO,EAAE,KAAKP,KAAL,CAAWE,KADtB;AAEE,cAAA,QAAQ,EAAE,KAAKY,WAFjB;AAGE,cAAA,SAAS,EAAC,kBAHZ,CAIE;;AAJF;AAAA;AAAA;AAAA;AAAA,oBADF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAZF,eAuBE;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,iCACE;AAAO,YAAA,SAAS,EAAC,kBAAjB;AAAA,oCACE;AAAO,cAAA,IAAI,EAAC,UAAZ;AACE,cAAA,OAAO,EAAE,KAAKd,KAAL,CAAWG,KADtB;AAEE,cAAA,QAAQ,EAAE,KAAKY,WAFjB;AAGE,cAAA,SAAS,EAAC,kBAHZ,CAIE;;AAJF;AAAA;AAAA;AAAA;AAAA,oBADF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAvBF,eAkCE;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,iCACE;AAAO,YAAA,SAAS,EAAC,kBAAjB;AAAA,oCACE;AAAO,cAAA,IAAI,EAAC,UAAZ;AACE,cAAA,OAAO,EAAE,KAAKf,KAAL,CAAWI,SADtB;AAEE,cAAA,QAAQ,EAAE,KAAKY,eAFjB;AAGE,cAAA,SAAS,EAAC,kBAHZ,CAIE;;AAJF;AAAA;AAAA;AAAA;AAAA,oBADF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAlCF,eA6CE;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,iCACE;AAAO,YAAA,SAAS,EAAC,kBAAjB;AAAA,oCACE;AAAO,cAAA,IAAI,EAAC,UAAZ;AACE,cAAA,OAAO,EAAE,KAAKhB,KAAL,CAAWK,QADtB;AAEE,cAAA,QAAQ,EAAE,KAAKY,cAFjB;AAGE,cAAA,SAAS,EAAC,kBAHZ,CAIE;;AAJF;AAAA;AAAA;AAAA;AAAA,oBADF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBA7CF,eAwDE;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,iCAQE,QAAC,IAAD;AACE,YAAA,EAAE,EAAE,OADN;AAEE,YAAA,KAAK,EAAE,KAAKjB,KAAL,CAAWM,KAFpB;AAGE,YAAA,SAAS,EAAC,iBAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AARF;AAAA;AAAA;AAAA;AAAA,gBAxDF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAoFD;;AAzLP,C,CA6LA;AACA;AACA;AACA;;;AAEA,eAAeP,UAAf,C,CAGI;AACA;AACJ;AACA;AACA;AACA;AACA;AAIA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAGI;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEJ;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { useState, Component } from \"react\";\nimport { useNavigate, Link} from \"react-router-dom\";\nimport Unsplash, { toJson } from \"unsplash-js\"; //unplash api import \nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport axios from 'axios';\nimport MainPage from './MainPage';\n\nimport Emotions from '../ models/Emotions';\n\n//import Link, { LinkedComponent } from 'valuelink';\n//import { Input } from 'valuelink/tags';\n\n\n//const valueArray = []; //initialize empty array\n\n\n\n//export default function WordSearch() \nclass WordSearch extends Component\n{\n    //  Checkboxes = () => {\n    //   const [wordInfo, setWordInfo] = useState(\"\");\n    //   const word = '';\n    // }\n\n    // create an array state to store the word form data\n    //  [wordInfo, setWordInfo] = useState([]);\n    // word = '';\n\n    //  addEntryClick = () => {\n    //   setWordInfo([...wordInfo, word]);\n    // };\n\n    // ref from: https://www.positronx.io/react-checkbox-tutorial-handle-multiple-checkboxes-values/\n    // 1) set Checkbox initial state of options\n    state = {\n        isHappy: false,\n        isSad: false,\n        isMad: false,\n        isExcited: false, \n        isLonely: false,\n        words: []\n    };\n    // 2) React Checkboxes define onChange Methods \n     onChangeHappy = (event) => {\n       event.preventDefault();\n       console.log(event);\n       console.log(\"happy\");\n        this.setState(initialState => ({\n          isHappy: !initialState.isHappy,\n          //here?\n          \n        }));\n        //or here?\n        // value = {wordInfo.isHappy}\n     }\n     \n    onChangeSad = () => {\n        this.setState(initialState => ({\n          isSad: !initialState.isSad,\n        }));\n     }\n     \n     onChangeMad = () => {\n        this.setState(initialState => ({\n          isMad: !initialState.isMad,\n        }));\n     }\n     \n     onChangeExcited = () => {\n        this.setState(initialState => ({\n          isExcited: !initialState.isExcited,\n        }));\n     }\n     onChangeLonely = () => {\n        this.setState(initialState => ({\n          isLonely: !initialState.isLonely,\n        }));\n\n     }\n\n      HandleClick = () =>{ \n      let navigate = useNavigate();\n      let path = `main`; \n      navigate(path);\n    };\n    \n    \n    \n    //  3) Submit \n     onSubmit = (e) => {\n      e.preventDefault();\n      \n      // if (this.state.isHappy === true){\n      //   word = 'happy';\n      //   addEntryClick();\n      // }\n\n      console.log(\"submitted\")\n      console.log(this.state);\n      console.log(this.wordInfo);\n      // useNavigate('/main')\n      // let navigate = useNavigate();\n      // this.props.navigate(\"/main\");\n    };\n     \n      // const navigate = useNavigate();\n    // PerformNav = () => {  \n    //   this.props.navigate(\"/main\");\n    // }\n    \n     \n      \n\n      //render step \n      render() {\n\n        // const navigate = useNavigate();\n\n\n        return (\n          <div className=\"App\">\n            <h2>What are You Feeling?</h2>\n            <form onSubmit={this.onSubmit} > \n              <div className=\"form-check\">\n                <label className=\"form-check-label\">\n                  <input type=\"checkbox\"\n                    checked={this.state.isHappy}\n                    onChange={this.onChangeHappy}\n                    className=\"form-check-input\"\n                    // value = {wordInfo.happy}\n                  />\n                  Happy\n                </label>\n              </div>\n              <div className=\"form-check\">\n                <label className=\"form-check-label\">\n                  <input type=\"checkbox\"\n                    checked={this.state.isSad}\n                    onChange={this.onChangeSad}\n                    className=\"form-check-input\"\n                    // value = {wordInfo.sad}\n                  />\n                  Sad\n                </label>\n              </div>\n              <div className=\"form-check\">\n                <label className=\"form-check-label\">\n                  <input type=\"checkbox\"\n                    checked={this.state.isMad}\n                    onChange={this.onChangeMad}\n                    className=\"form-check-input\"\n                    // value = {wordInfo.mad}\n                  />\n                  Mad\n                </label>\n              </div>\n              <div className=\"form-check\">\n                <label className=\"form-check-label\">\n                  <input type=\"checkbox\"\n                    checked={this.state.isExcited}\n                    onChange={this.onChangeExcited}\n                    className=\"form-check-input\"\n                    // value = {wordInfo.excited}\n                  />\n                  Excited\n                </label>\n              </div>\n              <div className=\"form-check\">\n                <label className=\"form-check-label\">\n                  <input type=\"checkbox\"\n                    checked={this.state.isLonely}\n                    onChange={this.onChangeLonely}\n                    className=\"form-check-input\"\n                    // value = {wordInfo.lonely}\n                  />\n                  Lonely\n                </label>\n              </div>\n              <div className=\"form-group\">\n                {/* <button className=\"btn btn-success\">\n                  Save\n                </button> */}\n                {/* <button className = \"btn\" onClick={this.handleClick}>\n                  Save\n                </button> */}\n                {/* button that links to the main page using link library  */}\n                <Link \n                  to={\"/main\"} \n                  state={this.state.words}\n                  className=\"btn btn-primary\">Save</Link>\n              </div>\n            </form>\n             {/* BUTTON TO GO NAVIGATE TO THE MAIN PAGE */}\n            {/* <p>\n                <button onClick={() => this.props.navigate(\"/main\")}>Go to MAIN</button>\n            </p> */}\n            {/* <p>\n              <button onClick={this.props.navigate(\"/main\")}>\n                MAIN PAGE\n              </button>\n            </p> */}\n          </div>\n        );\n      }\n    }\n    \n\n// function WithNavigate(props) {\n//   let navigate = useNavigate();\n//   return <WordSearch {...props} navigate={navigate} />\n// }\n\nexport default WordSearch;\n\n\n    // const [query, setQuery] = useState(\"\");\n    // console.log(query);\n//     const searchPhotos = async (e) => \n//     {\n//         e.preventDefault();\n//         console.log(\"Submitting the Form\")\n//     };\n\n\n\n//  function WordSearch() {\n//     const [checked, setChecked] = React.useState(false);\n\n//     const handleChange = () => {\n//         setChecked(!checked);\n//     }\n\n//     const unsplash = new Unsplash({\n//         accessKey: \"your_Access_Key\",\n//       }\n//     );\n\n//     const [state, setState] = React.useState();\n\n\n    // const [word, setWord] = useState(\"\");\n    // console.log(word);\n\n\n    // render() {\n    //     return (\n    //     //  className=\"Words\">\n    //          className=\"heading-container\">\n    //             className=\"title\">What are you Feeling?</h1> \n    //         v>\n    //          className=\"words-container\">\n    //             m onSubmit={this.onSubmit}>\n    //                  className=\"form-check\">\n    //                     el className=\"form-check-label\">\n    //                     ut type=\"checkbox\"\n    //                         ked={this.state.isHappy}\n    //                         ange={this.onChangeHappy}\n    //                         sName=\"form-check-input\"\n                        \n    //                     y\n    //                     bel>\n    //                 v>\n    //                  className=\"form-check\">\n    //                     el className=\"form-check-label\">\n    //                     ut type=\"checkbox\"\n    //                         ked={this.state.isSad}\n    //                         ange={this.onChangeSad}\n    //                         sName=\"form-check-input\"\n                        \n                        // \n    //                     bel>\n    //                 v>\n    //                  className=\"form-check\">\n    //                     el className=\"form-check-label\">\n    //                     ut type=\"checkbox\"\n    //                         ked={this.state.isMad}\n    //                         ange={this.onChangeMad}\n    //                         sName=\"form-check-input\"\n                        \n                        // \n    //                     bel>\n    //                 v>\n    //                  className=\"form-check\">\n    //                     el className=\"form-check-label\">\n    //                     ut type=\"checkbox\"\n    //                         ked={this.state.isExcited}\n    //                         ange={this.onChangeExcited}\n    //                         sName=\"form-check-input\"\n                        \n    //                     ted\n    //                     bel>\n    //                 v>\n    //                  className=\"form-check\">\n    //                     el className=\"form-check-label\">\n    //                     ut type=\"checkbox\"\n    //                         ked={this.state.isLonely}\n    //                         ange={this.onChangeLonely}\n    //                         sName=\"form-check-input\"\n                        \n    //                     ly\n    //                     bel>\n    //                 v>\n    //                  className=\"form-group\">\n    //                     ton className=\"btn btn-success\">\n                        // \n    //                     tton>\n    //                 v>\n    //             rm>\n    //             BUNCH OF CHECKBOXES WITH WORDS TO SELECT and also a SUBMIT BUTTON to send the results and stuff \n    //             m>\n    //                 >\n    //                     ckbox \n    //                         l=\"happy :)\"\n    //                         e={checked}\n    //                         ange={handleChange}\n                        \n    //                 v> \n    //                  v>\n    //                     ton type=\"submit\">Submit</button>\n    //                 v> \n    //                 s \"My Value\" checked? {checked.toString()}</p>\n    //             rm> */}\n    //                 </div>\n                \n    //                 // </div>\n    //         );\n    //     }\n    // }\n    \n//export default WordSearch;\n\n// const Checkbox = ({ label, value, onChange }) => {\n//     return (\n//       <label>\n//         <input type=\"checkbox\" checked={value} onChange={onChange} />\n//         {label}\n//       </label>\n//     );\n//   };\n\n\n\n  // return (//does that <> do something? \n  //   <>  \n  //     <form className=\"form\">\n  //       <label className=\"label\" htmlFor=\"query\">\n  //         {\" \"}\n  //         📷\n  //       </label>\n  //       <input\n  //         type=\"text\"\n  //         name=\"query\"\n  //         className=\"input\"\n  //         placeholder={`Try \"dog\" or \"apple\"`}\n  //         value={query}\n  //         onChange={(e) => setQuery(e.target.value)}\n  //       />\n  //       <button type=\"submit\" className=\"button\">\n  //         Search\n  //       </button>\n  //     </form>\n  //   </>\n  // );\n// }\n\n/* import React, { useState } from \"react\";\n\nfunction WordSearch() {\n    \nreturn (\n <div>\n </div>\n);\n}\nexport default WordSearch;  */\n// export default WordSearch;"]},"metadata":{},"sourceType":"module"}