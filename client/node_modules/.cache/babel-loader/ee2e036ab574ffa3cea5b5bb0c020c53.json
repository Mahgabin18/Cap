{"ast":null,"code":"var _jsxFileName = \"/Users/flabicamaharjan/Desktop/Cap/client/src/components/MainPage.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport ReactDOM from \"react-dom\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport \"./styling/MainPage.css\";\nimport { createApi } from \"unsplash-js\";\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport Emotions from '../models/Emotions'; //heyy\n//testing\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst api = createApi({\n  // Don't forget to set your access token here!\n  // See https://unsplash.com/developers\n  accessKey: \"p55OV837XTRngIgJA4phnnQHufPJowmk9Fq7vXaCYes\"\n});\n\nconst setImageFavoriteStatus = (id, photo) => {\n  const local = localStorage.getItem(\"favoriteImages\");\n  if (local.length === 0) photo.liked_by_user = false;else {\n    const images = JSON.parse(local);\n\n    if (images.findIndex(image => image.id === id) != -1) {\n      photo.liked_by_user = true;\n    } else {\n      photo.liked_by_user = false;\n    }\n  }\n};\n\nconst getLikedPhotos = () => {\n  const local = localStorage.getItem(\"favoriteImages\");\n\n  if (local.length === 0) {\n    return [];\n  } else {\n    return JSON.parse(local);\n  }\n}; // This will show the actual photo component and it takes 'photo' as a paremeter which will be given once you click search\n\n\nconst PhotoComp = _ref => {\n  _s();\n\n  let {\n    photo\n  } = _ref;\n  const {\n    user,\n    urls,\n    id\n  } = photo;\n  const [isAnimating, setOnHoldState] = useState(false);\n  let likedPhotos = getLikedPhotos();\n  setImageFavoriteStatus(id, photo);\n  const [isClicked, setClickedState] = useState(photo.liked_by_user); // setImageFavoriteStatus(id, photo);\n\n  function handleLikeClick(id, photo) {\n    setOnHoldState(false);\n\n    if (!isClicked) {\n      if (!likedPhotos.includes(id)) {\n        likedPhotos.push({\n          id: id,\n          url: photo.urls.regular,\n          user: photo.user\n        });\n      }\n\n      photo.liked_by_user = true;\n      setClickedState(true);\n    } else if (isClicked) {\n      likedPhotos = likedPhotos.filter(lPhoto => lPhoto.id !== id);\n      photo.liked_by_user = false;\n      setClickedState(false);\n    }\n\n    localStorage.setItem('favoriteImages', JSON.stringify(likedPhotos));\n  }\n\n  function handleMouseHold() {\n    if (!isAnimating) setOnHoldState(true);\n  }\n\n  return (\n    /*#__PURE__*/\n\n    /*\n      Fragments allow you to write cleaner, readable and maintainable code. They are not a replacement for divs in your HTML, but they offer a better approach to structuring and rendering your markup if youâ€™re using unnecessary divs in your code.\n      You can avoid issues that break your layouts or potentially optimize your markup rendering time using fragments. However, you should only use them when needed. If you need a wrapper to your JSX for styling, use a div instead. \n    */\n    _jsxDEV(Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-text-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-like-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"img\",\n            src: urls.regular\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"feed-button\",\n            onMouseDown: handleMouseHold,\n            onClick: () => handleLikeClick(id, photo),\n            children: !photo.liked_by_user ? /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"feed-logo \" + (isAnimating ? 'logo-holding' : ''),\n              src: require(\"../images/whiteoutline.png\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"feed-logo \" + (isAnimating ? 'logo-holding' : ''),\n              src: require(\"../images/redheart.png\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"credit\",\n          target: \"_blank\",\n          href: `https://unsplash.com/@${user.username}`,\n          children: user.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }, this)\n  );\n};\n\n_s(PhotoComp, \"g0CJAF2bhYLzANVHzLTcIuIKq94=\");\n\n_c = PhotoComp;\n\nconst Body = props => {\n  _s2();\n\n  // FROM THE GUIDE: https://www.digitalocean.com/community/tutorials/how-to-build-a-photo-search-app-with-react-using-the-unsplash-api#step-5-setting-state-using-search-query\n  // this is tied to the Search Box inputs\n  const [query, setQuery] = useState(\"\"); // FROM DEMO CODE: https://stackblitz.com/edit/unsplash-js-javascript?file=src%2Findex.js\n  // this is for the searching the photos with unsplash and the data will be linked to 'photo' in the Body render with .map\n\n  const [data, setPhotosResponse] = useState(null);\n  const navigate = useNavigate(); // useEffect(() => {\n  //   async function searchPhotos() {\n  //     api.search \n  //       .getPhotos({ query: query, orientation: \"landscape\" })\n  //       .then((result) => {\n  //         setPhotosResponse(result);\n  //       })\n  //       .catch(() => {\n  //         console.log(\"something went wrong!\");\n  //       });\n  //   }\n  //   searchPhotos();\n  // }, [query]);\n  // MIXTURE OF GUIDE+DEMO+GOOGLEThis calls the api to search for the photos with the search query input\n  // make sure this is only called once in the 'onSubmit' so it can only search when the form is submitted\n\n  async function searchPhotos() {\n    api.search.getPhotos({\n      query: query,\n      orientation: \"landscape\"\n    }).then(result => {\n      setPhotosResponse(result.response.results);\n    }).catch(() => {\n      console.log(\"something went wrong!\");\n    });\n  }\n\n  async function initializeEmotions(emotion) {\n    let data = [];\n    await api.search.getPhotos({\n      query: emotion,\n      orientation: \"landscape\"\n    }).then(result => {\n      data = result.response.results;\n    }).catch(() => {\n      console.log(\"something went wrong!\");\n    });\n    return data;\n  }\n\n  async function randomShuffleArray(inputArr) {\n    let shuffledArr = await inputArr.map(value => ({\n      value,\n      sort: Math.random()\n    })).sort((a, b) => a.sort - b.sort).map(_ref2 => {\n      let {\n        value\n      } = _ref2;\n      return value;\n    });\n    return shuffledArr;\n  } // needed to actually load things in?\n  // DO NOT call the useEffect React Hook inside the return render ; can only be called in the function component aka up here\n  // SHOUTOUT STACKOVERFLOW: https://stackoverflow.com/questions/62248741/how-to-apply-useeffect-based-on-form-submission-in-react\n  // \"If you want fetch data onload of your functional component, you may use useEffect like this :\"\n\n\n  useEffect(async () => {\n    if (props !== null && props !== void 0 && props.emotions) {\n      let prevResult = [];\n\n      for (const emotion of props.emotions) {\n        let newResult = await initializeEmotions(emotion);\n        prevResult = prevResult.concat(newResult.filter(item => prevResult.findIndex(result => result.id == item.id) < 0));\n      }\n\n      prevResult = await randomShuffleArray(prevResult);\n      setPhotosResponse(prevResult);\n    }\n  }, []); // \"And you want your fetch call to be triggered with button click :\"\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    searchPhotos();\n  }; // from DEMO\n\n\n  if (data === null) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 12\n    }, this);\n  } else if (data.errors) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: data.errors[0]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"PS: Make sure to set your access token!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-page-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-page-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"form\",\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-flex\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"query\",\n              className: \"input\",\n              placeholder: `Try \"dog\" or \"apple\"`,\n              value: query,\n              onChange: e => setQuery(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"label\",\n              htmlFor: \"query\",\n              children: [\" \", \"\\uD83D\\uDCF7\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"button\",\n            children: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button-favorite button\",\n          onClick: () => navigate(\"/favorites\"),\n          children: \"Favorites\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"feed\",\n        children: data.map(photo => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"li\",\n          children: /*#__PURE__*/_jsxDEV(PhotoComp, {\n            photo: photo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 15\n          }, this)\n        }, photo.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_s2(Body, \"M40j27N1/dY7zRbGCcCOMoU48TU=\", false, function () {\n  return [useNavigate];\n});\n\n_c2 = Body;\n\nconst MainPage = () => {\n  _s3();\n\n  const {\n    state\n  } = useLocation();\n  const [words, changeWords] = useState();\n  useEffect(async () => {\n    await convertStateToSearchTerms(state);\n  }, []);\n\n  const convertStateToSearchTerms = async boolStates => {\n    var _Object$keys;\n\n    if (!boolStates) boolStates = {};\n    let boolArr = (_Object$keys = Object.keys(boolStates)) === null || _Object$keys === void 0 ? void 0 : _Object$keys.map(key => {\n      return {\n        [key]: boolStates[key]\n      };\n    });\n    let wordArr = [];\n    await boolArr.forEach(element => {\n      if (element.isHappy) wordArr.push(Emotions.happy);else if (element.isSad) wordArr.push(Emotions.sad);else if (element.isMad) wordArr.push(Emotions.mad);else if (element.isExcited) wordArr.push(Emotions.excited);else if (element.isLonely) wordArr.push(Emotions.lonely);\n    });\n    changeWords(wordArr);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"root\",\n    children: [words && words.length != 0 && /*#__PURE__*/_jsxDEV(Body, {\n      emotions: words\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 38\n    }, this), words && words.length === 0 && /*#__PURE__*/_jsxDEV(Body, {\n      emotions: []\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 39\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 271,\n    columnNumber: 5\n  }, this);\n};\n\n_s3(MainPage, \"W6PnR567v1cEir8XW5g9j3BQ6qI=\", false, function () {\n  return [useLocation];\n});\n\n_c3 = MainPage;\nexport { MainPage, PhotoComp };\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"PhotoComp\");\n$RefreshReg$(_c2, \"Body\");\n$RefreshReg$(_c3, \"MainPage\");","map":{"version":3,"sources":["/Users/flabicamaharjan/Desktop/Cap/client/src/components/MainPage.js"],"names":["ReactDOM","useLocation","useNavigate","React","Fragment","useEffect","useState","createApi","Emotions","api","accessKey","setImageFavoriteStatus","id","photo","local","localStorage","getItem","length","liked_by_user","images","JSON","parse","findIndex","image","getLikedPhotos","PhotoComp","user","urls","isAnimating","setOnHoldState","likedPhotos","isClicked","setClickedState","handleLikeClick","includes","push","url","regular","filter","lPhoto","setItem","stringify","handleMouseHold","require","username","name","Body","props","query","setQuery","data","setPhotosResponse","navigate","searchPhotos","search","getPhotos","orientation","then","result","response","results","catch","console","log","initializeEmotions","emotion","randomShuffleArray","inputArr","shuffledArr","map","value","sort","Math","random","a","b","emotions","prevResult","newResult","concat","item","handleSubmit","e","preventDefault","errors","target","MainPage","state","words","changeWords","convertStateToSearchTerms","boolStates","boolArr","Object","keys","key","wordArr","forEach","element","isHappy","happy","isSad","sad","isMad","mad","isExcited","excited","isLonely","lonely"],"mappings":"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","sourcesContent":["import ReactDOM from \"react-dom\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport \"./styling/MainPage.css\";\nimport { createApi } from \"unsplash-js\";\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport Emotions from '../models/Emotions';\n\n//heyy\n//testing\n\nconst api = createApi({\n  // Don't forget to set your access token here!\n  // See https://unsplash.com/developers\n  accessKey: \"p55OV837XTRngIgJA4phnnQHufPJowmk9Fq7vXaCYes\"\n});\n\nconst setImageFavoriteStatus = (id, photo) => {\n  const local = localStorage.getItem(\"favoriteImages\"); \n\n  if(local.length === 0) photo.liked_by_user = false;\n  else{\n    const images = JSON.parse(local);\n    if(images.findIndex(image => image.id === id) != -1){\n      photo.liked_by_user = true;\n    } else{\n      photo.liked_by_user = false;\n    }\n  }\n}\n\nconst getLikedPhotos = () => {\n  const local = localStorage.getItem(\"favoriteImages\"); \n  if(local.length === 0){\n    return [];\n  } else{\n    return JSON.parse(local);\n  }\n}\n\n// This will show the actual photo component and it takes 'photo' as a paremeter which will be given once you click search\nconst PhotoComp = ({ photo }) => {\n  \n  const { user, urls, id } = photo;\n  const [isAnimating, setOnHoldState] = useState(false);\n  let likedPhotos = getLikedPhotos();\n  setImageFavoriteStatus(id, photo); \n  const [isClicked, setClickedState] = useState(photo.liked_by_user);\n  \n  // setImageFavoriteStatus(id, photo);\n\n  function handleLikeClick(id, photo){\n    setOnHoldState(false);\n    if(!isClicked){\n      if(!likedPhotos.includes(id)){\n        likedPhotos.push({id: id, url: photo.urls.regular, user: photo.user});\n      }\n      photo.liked_by_user = true;\n      setClickedState(true);\n    } else if(isClicked){\n      likedPhotos = likedPhotos.filter(lPhoto => lPhoto.id !== id);\n      photo.liked_by_user = false;\n      setClickedState(false);\n    }\n    localStorage.setItem('favoriteImages', JSON.stringify(likedPhotos));\n  }\n\n  function handleMouseHold(){\n    if(!isAnimating) setOnHoldState(true);\n  }\n\n  return (\n    /*\n      Fragments allow you to write cleaner, readable and maintainable code. They are not a replacement for divs in your HTML, but they offer a better approach to structuring and rendering your markup if youâ€™re using unnecessary divs in your code.\n      You can avoid issues that break your layouts or potentially optimize your markup rendering time using fragments. However, you should only use them when needed. If you need a wrapper to your JSX for styling, use a div instead. \n    */\n    <Fragment>\n      <div className=\"image-text-container\">\n        <div className=\"image-like-container\">\n          <img className=\"img\" src={urls.regular} />\n          <button className=\"feed-button\" onMouseDown={handleMouseHold} onClick={() => handleLikeClick(id, photo)}>\n            {\n              !photo.liked_by_user?\n              <img\n                className={\"feed-logo \" + (isAnimating? 'logo-holding': '')}\n                src={require(\"../images/whiteoutline.png\")}\n              />\n              :\n              <img\n                className={\"feed-logo \" + (isAnimating? 'logo-holding': '')}\n                src={require(\"../images/redheart.png\")}\n              />\n            }\n          </button>\n        </div>\n        <a\n          className=\"credit\"\n          target=\"_blank\"\n          href={`https://unsplash.com/@${user.username}`}\n        >\n          {user.name}\n        </a>\n      </div>\n    </Fragment>\n  );\n};\n\nconst Body = (props) => {\n  // FROM THE GUIDE: https://www.digitalocean.com/community/tutorials/how-to-build-a-photo-search-app-with-react-using-the-unsplash-api#step-5-setting-state-using-search-query\n  // this is tied to the Search Box inputs\n  const [query, setQuery] = useState(\"\");\n  // FROM DEMO CODE: https://stackblitz.com/edit/unsplash-js-javascript?file=src%2Findex.js\n  // this is for the searching the photos with unsplash and the data will be linked to 'photo' in the Body render with .map\n  const [data, setPhotosResponse] = useState(null);\n  const navigate = useNavigate();\n  // useEffect(() => {\n  //   async function searchPhotos() {\n  //     api.search \n  //       .getPhotos({ query: query, orientation: \"landscape\" })\n  //       .then((result) => {\n  //         setPhotosResponse(result);\n  //       })\n  //       .catch(() => {\n  //         console.log(\"something went wrong!\");\n  //       });\n  //   }\n  //   searchPhotos();\n  // }, [query]);\n\n  // MIXTURE OF GUIDE+DEMO+GOOGLEThis calls the api to search for the photos with the search query input\n  // make sure this is only called once in the 'onSubmit' so it can only search when the form is submitted\n  async function searchPhotos() {\n    api.search\n      .getPhotos({ query: query, orientation: \"landscape\" })\n      .then((result) => {\n        setPhotosResponse(result.response.results);\n      })\n      .catch(() => {\n        console.log(\"something went wrong!\");\n      });\n  }\n\n  async function initializeEmotions(emotion){\n    let data = []; \n    await api.search\n    .getPhotos({ query: emotion, orientation: \"landscape\" })\n    .then((result) => {\n      data = result.response.results;\n    })\n    .catch(() => {\n      console.log(\"something went wrong!\");\n    });\n    return data;\n  }\n\n  async function randomShuffleArray(inputArr){\n    let shuffledArr = await inputArr\n      .map(value => ({value, sort: Math.random()}))\n      .sort((a,b) => a.sort - b.sort)\n      .map(({ value }) => value);\n\n    return shuffledArr;\n  }\n\n\n  // needed to actually load things in?\n  // DO NOT call the useEffect React Hook inside the return render ; can only be called in the function component aka up here\n  // SHOUTOUT STACKOVERFLOW: https://stackoverflow.com/questions/62248741/how-to-apply-useeffect-based-on-form-submission-in-react\n  // \"If you want fetch data onload of your functional component, you may use useEffect like this :\"\n  useEffect(async () => {\n    if(props?.emotions){\n      let prevResult = [];\n      for(const emotion of props.emotions){\n        let newResult = await initializeEmotions(emotion);\n        prevResult = prevResult.concat(newResult.filter((item) => \n          prevResult.findIndex((result) => result.id == item.id) < 0\n        ));\n      }\n      prevResult = await randomShuffleArray(prevResult);\n      setPhotosResponse(prevResult);\n    }\n  }, []);\n  // \"And you want your fetch call to be triggered with button click :\"\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    searchPhotos();\n  };\n\n  // from DEMO\n  if (data === null) {\n    return <div>Loading...</div>;\n  } else if (data.errors) {\n    return (\n      <div>\n        <div>{data.errors[0]}</div>\n        <div>PS: Make sure to set your access token!</div>\n      </div>\n    );\n  } else {\n    return (\n      <div className=\"main-page-container\">\n          {/* from GUIDE */}\n          <div className=\"main-page-header\">\n            <form className=\"form\" onSubmit={handleSubmit}>\n              <div className=\"form-flex\">\n                <input\n                  type=\"text\"\n                  name=\"query\"\n                  className=\"input\"\n                  placeholder={`Try \"dog\" or \"apple\"`}\n                  value={query}\n                  onChange={(e) => setQuery(e.target.value)}\n                />\n                <label className=\"label\" htmlFor=\"query\">\n                  {\" \"}\n                  ðŸ“·\n                </label>\n              </div>\n              <button type=\"submit\" className=\"button\">\n                Search\n              </button>\n            </form>\n            <button className=\"button-favorite button\" onClick={() => navigate(\"/favorites\")}>\n              Favorites\n            </button>\n          </div>\n        {/* from DEMO */}\n        <div className=\"feed\">\n          {data.map((photo) => (\n            <div key={photo.id} className=\"li\">\n              <PhotoComp photo={photo} />\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n};\n\nconst MainPage = () => {\n  const {state} = useLocation();\n  const [words, changeWords] = useState();\n\n  useEffect(async () => {\n    await convertStateToSearchTerms(state);\n  }, [])\n\n  const convertStateToSearchTerms = async (boolStates) => {\n    if(!boolStates) boolStates = {};\n    let boolArr = Object.keys(boolStates)?.map(key => {\n      return {[key]: boolStates[key]};\n    });\n    let wordArr = [];\n    await boolArr.forEach(element => {\n      if (element.isHappy)\n        wordArr.push(Emotions.happy);\n      else if (element.isSad)\n        wordArr.push(Emotions.sad);\n      else if (element.isMad)\n        wordArr.push(Emotions.mad);\n      else if (element.isExcited)\n        wordArr.push(Emotions.excited);\n      else if (element.isLonely)\n        wordArr.push(Emotions.lonely);\n    });\n\n    changeWords(wordArr);\n  }\n\n  return (\n    <main className=\"root\">\n      {words && words.length != 0 && <Body emotions={words}/>}\n      {words && words.length === 0 && <Body emotions={[]}/>}\n    </main>\n  );\n};\nexport {MainPage, PhotoComp};\n"]},"metadata":{},"sourceType":"module"}