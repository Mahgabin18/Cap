{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\acer\\\\Desktop\\\\cap_music\\\\client\\\\src\\\\components\\\\WordSearch.js\";\nimport React, { useState, Component } from \"react\";\nimport { useNavigate, Link } from \"react-router-dom\";\nimport Unsplash, { toJson } from \"unsplash-js\"; //unplash api import \n\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport axios from 'axios';\nimport MainPage from './MainPage'; //import Link, { LinkedComponent } from 'valuelink';\n//import { Input } from 'valuelink/tags';\n//const valueArray = []; //initialize empty array\n//export default function WordSearch() \n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass WordSearch extends Component {\n  constructor() {\n    var _s = $RefreshSig$();\n\n    super(...arguments);\n    this.state = {\n      isHappy: false,\n      isSad: false,\n      isMad: false,\n      isExcited: false,\n      isLonely: false\n    };\n\n    this.onChangeHappy = event => {\n      this.setState(initialState => ({\n        isHappy: !initialState.isHappy\n      }));\n    };\n\n    this.onChangeSad = () => {\n      this.setState(initialState => ({\n        isSad: !initialState.isSad\n      }));\n    };\n\n    this.onChangeMad = () => {\n      this.setState(initialState => ({\n        isMad: !initialState.isMad\n      }));\n    };\n\n    this.onChangeExcited = () => {\n      this.setState(initialState => ({\n        isExcited: !initialState.isExcited\n      }));\n    };\n\n    this.onChangeLonely = () => {\n      this.setState(initialState => ({\n        isLonely: !initialState.isLonely\n      }));\n    };\n\n    this.HandleClick = _s(() => {\n      _s();\n\n      let navigate = useNavigate();\n      let path = `main`;\n      navigate(path);\n    }, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n      return [useNavigate];\n    });\n\n    this.onSubmit = e => {\n      e.preventDefault(); // if (this.state.isHappy === true){\n      //   word = 'happy';\n      //   addEntryClick();\n      // }\n\n      console.log(\"submitted\");\n      console.log(this.state);\n      console.log(this.wordInfo); // useNavigate('/main')\n      // let navigate = useNavigate();\n      // this.props.navigate(\"/main\");\n    };\n  }\n\n  // const navigate = useNavigate();\n  // PerformNav = () => {  \n  //   this.props.navigate(\"/main\");\n  // }\n  //render step \n  render() {\n    // const navigate = useNavigate();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"What are You Feeling?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.onSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-check\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-check-label\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: this.state.isHappy,\n              onChange: this.onChangeHappy,\n              className: \"form-check-input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 19\n            }, this), \"Happy\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-check\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-check-label\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: this.state.isSad,\n              onChange: this.onChangeSad,\n              className: \"form-check-input\" // value = {wordInfo.sad}\n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 19\n            }, this), \"Sad\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-check\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-check-label\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: this.state.isMad,\n              onChange: this.onChangeMad,\n              className: \"form-check-input\" // value = {wordInfo.mad}\n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 19\n            }, this), \"Mad\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-check\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-check-label\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: this.state.isExcited,\n              onChange: this.onChangeExcited,\n              className: \"form-check-input\" // value = {wordInfo.excited}\n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 19\n            }, this), \"Excited\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-check\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-check-label\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: this.state.isLonely,\n              onChange: this.onChangeLonely,\n              className: \"form-check-input\" // value = {wordInfo.lonely}\n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 19\n            }, this), \"Lonely\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/main\",\n            state: this.state,\n            className: \"btn btn-primary\",\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }, this);\n  }\n\n} // function WithNavigate(props) {\n//   let navigate = useNavigate();\n//   return <WordSearch {...props} navigate={navigate} />\n// }\n\n\nexport default WordSearch; // const [query, setQuery] = useState(\"\");\n// console.log(query);\n//     const searchPhotos = async (e) => \n//     {\n//         e.preventDefault();\n//         console.log(\"Submitting the Form\")\n//     };\n//  function WordSearch() {\n//     const [checked, setChecked] = React.useState(false);\n//     const handleChange = () => {\n//         setChecked(!checked);\n//     }\n//     const unsplash = new Unsplash({\n//         accessKey: \"your_Access_Key\",\n//       }\n//     );\n//     const [state, setState] = React.useState();\n// const [word, setWord] = useState(\"\");\n// console.log(word);\n// render() {\n//     return (\n//     //  className=\"Words\">\n//          className=\"heading-container\">\n//             className=\"title\">What are you Feeling?</h1> \n//         v>\n//          className=\"words-container\">\n//             m onSubmit={this.onSubmit}>\n//                  className=\"form-check\">\n//                     el className=\"form-check-label\">\n//                     ut type=\"checkbox\"\n//                         ked={this.state.isHappy}\n//                         ange={this.onChangeHappy}\n//                         sName=\"form-check-input\"\n//                     y\n//                     bel>\n//                 v>\n//                  className=\"form-check\">\n//                     el className=\"form-check-label\">\n//                     ut type=\"checkbox\"\n//                         ked={this.state.isSad}\n//                         ange={this.onChangeSad}\n//                         sName=\"form-check-input\"\n// \n//                     bel>\n//                 v>\n//                  className=\"form-check\">\n//                     el className=\"form-check-label\">\n//                     ut type=\"checkbox\"\n//                         ked={this.state.isMad}\n//                         ange={this.onChangeMad}\n//                         sName=\"form-check-input\"\n// \n//                     bel>\n//                 v>\n//                  className=\"form-check\">\n//                     el className=\"form-check-label\">\n//                     ut type=\"checkbox\"\n//                         ked={this.state.isExcited}\n//                         ange={this.onChangeExcited}\n//                         sName=\"form-check-input\"\n//                     ted\n//                     bel>\n//                 v>\n//                  className=\"form-check\">\n//                     el className=\"form-check-label\">\n//                     ut type=\"checkbox\"\n//                         ked={this.state.isLonely}\n//                         ange={this.onChangeLonely}\n//                         sName=\"form-check-input\"\n//                     ly\n//                     bel>\n//                 v>\n//                  className=\"form-group\">\n//                     ton className=\"btn btn-success\">\n// \n//                     tton>\n//                 v>\n//             rm>\n//             BUNCH OF CHECKBOXES WITH WORDS TO SELECT and also a SUBMIT BUTTON to send the results and stuff \n//             m>\n//                 >\n//                     ckbox \n//                         l=\"happy :)\"\n//                         e={checked}\n//                         ange={handleChange}\n//                 v> \n//                  v>\n//                     ton type=\"submit\">Submit</button>\n//                 v> \n//                 s \"My Value\" checked? {checked.toString()}</p>\n//             rm> */}\n//                 </div>\n//                 // </div>\n//         );\n//     }\n// }\n//export default WordSearch;\n// const Checkbox = ({ label, value, onChange }) => {\n//     return (\n//       <label>\n//         <input type=\"checkbox\" checked={value} onChange={onChange} />\n//         {label}\n//       </label>\n//     );\n//   };\n// return (//does that <> do something? \n//   <>  \n//     <form className=\"form\">\n//       <label className=\"label\" htmlFor=\"query\">\n//         {\" \"}\n//         📷\n//       </label>\n//       <input\n//         type=\"text\"\n//         name=\"query\"\n//         className=\"input\"\n//         placeholder={`Try \"dog\" or \"apple\"`}\n//         value={query}\n//         onChange={(e) => setQuery(e.target.value)}\n//       />\n//       <button type=\"submit\" className=\"button\">\n//         Search\n//       </button>\n//     </form>\n//   </>\n// );\n// }\n\n/* import React, { useState } from \"react\";\r\nfunction WordSearch() {\r\n    \r\nreturn (\r\n <div>\r\n </div>\r\n);\r\n}\r\nexport default WordSearch;  */\n// export default WordSearch;","map":{"version":3,"sources":["C:/Users/acer/Desktop/cap_music/client/src/components/WordSearch.js"],"names":["React","useState","Component","useNavigate","Link","Unsplash","toJson","axios","MainPage","WordSearch","state","isHappy","isSad","isMad","isExcited","isLonely","onChangeHappy","event","setState","initialState","onChangeSad","onChangeMad","onChangeExcited","onChangeLonely","HandleClick","navigate","path","onSubmit","e","preventDefault","console","log","wordInfo","render"],"mappings":"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ACA;AACA;AAEA;AAGI;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEJ;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { useState, Component } from \"react\";\r\nimport { useNavigate, Link} from \"react-router-dom\";\r\nimport Unsplash, { toJson } from \"unsplash-js\"; //unplash api import \r\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport axios from 'axios';\r\nimport MainPage from './MainPage';\r\n\r\n\r\n//import Link, { LinkedComponent } from 'valuelink';\r\n//import { Input } from 'valuelink/tags';\r\n\r\n\r\n//const valueArray = []; //initialize empty array\r\n\r\n\r\n\r\n//export default function WordSearch() \r\nclass WordSearch extends Component\r\n{\r\n    //  Checkboxes = () => {\r\n    //   const [wordInfo, setWordInfo] = useState(\"\");\r\n    //   const word = '';\r\n    // }\r\n\r\n    // create an array state to store the word form data\r\n    //  [wordInfo, setWordInfo] = useState([]);\r\n    // word = '';\r\n\r\n    //  addEntryClick = () => {\r\n    //   setWordInfo([...wordInfo, word]);\r\n    // };\r\n\r\n    // ref from: https://www.positronx.io/react-checkbox-tutorial-handle-multiple-checkboxes-values/\r\n    // 1) set Checkbox initial state of options\r\n    state = {\r\n        isHappy: false,\r\n        isSad: false,\r\n        isMad: false,\r\n        isExcited: false, \r\n        isLonely: false,\r\n    };\r\n    // 2) React Checkboxes define onChange Methods \r\n     onChangeHappy = (event) => {\r\n        this.setState(initialState => ({\r\n          isHappy: !initialState.isHappy,\r\n        }));\r\n     }\r\n     \r\n    onChangeSad = () => {\r\n        this.setState(initialState => ({\r\n          isSad: !initialState.isSad,\r\n        }));\r\n     }\r\n     \r\n     onChangeMad = () => {\r\n        this.setState(initialState => ({\r\n          isMad: !initialState.isMad,\r\n        }));\r\n     }\r\n     \r\n     onChangeExcited = () => {\r\n        this.setState(initialState => ({\r\n          isExcited: !initialState.isExcited,\r\n        }));\r\n     }\r\n     onChangeLonely = () => {\r\n        this.setState(initialState => ({\r\n          isLonely: !initialState.isLonely,\r\n        }));\r\n\r\n     }\r\n\r\n      HandleClick = () =>{ \r\n      let navigate = useNavigate();\r\n      let path = `main`; \r\n      navigate(path);\r\n    };\r\n    \r\n    \r\n    \r\n    //  3) Submit \r\n     onSubmit = (e) => {\r\n      e.preventDefault();\r\n      \r\n      // if (this.state.isHappy === true){\r\n      //   word = 'happy';\r\n      //   addEntryClick();\r\n      // }\r\n\r\n      console.log(\"submitted\")\r\n      console.log(this.state);\r\n      console.log(this.wordInfo);\r\n      // useNavigate('/main')\r\n      // let navigate = useNavigate();\r\n      // this.props.navigate(\"/main\");\r\n    };\r\n     \r\n      // const navigate = useNavigate();\r\n    // PerformNav = () => {  \r\n    //   this.props.navigate(\"/main\");\r\n    // }\r\n    \r\n     \r\n      \r\n\r\n      //render step \r\n      render() {\r\n\r\n        // const navigate = useNavigate();\r\n\r\n\r\n        return (\r\n          <div className=\"App\">\r\n            <h2>What are You Feeling?</h2>\r\n            <form onSubmit={this.onSubmit} > \r\n              <div className=\"form-check\">\r\n                <label className=\"form-check-label\">\r\n                  <input type=\"checkbox\"\r\n                    checked={this.state.isHappy}\r\n                    onChange={this.onChangeHappy}\r\n                    className=\"form-check-input\"\r\n                  />\r\n                  Happy\r\n                </label>\r\n              </div>\r\n              <div className=\"form-check\">\r\n                <label className=\"form-check-label\">\r\n                  <input type=\"checkbox\"\r\n                    checked={this.state.isSad}\r\n                    onChange={this.onChangeSad}\r\n                    className=\"form-check-input\"\r\n                    // value = {wordInfo.sad}\r\n                  />\r\n                  Sad\r\n                </label>\r\n              </div>\r\n              <div className=\"form-check\">\r\n                <label className=\"form-check-label\">\r\n                  <input type=\"checkbox\"\r\n                    checked={this.state.isMad}\r\n                    onChange={this.onChangeMad}\r\n                    className=\"form-check-input\"\r\n                    // value = {wordInfo.mad}\r\n                  />\r\n                  Mad\r\n                </label>\r\n              </div>\r\n              <div className=\"form-check\">\r\n                <label className=\"form-check-label\">\r\n                  <input type=\"checkbox\"\r\n                    checked={this.state.isExcited}\r\n                    onChange={this.onChangeExcited}\r\n                    className=\"form-check-input\"\r\n                    // value = {wordInfo.excited}\r\n                  />\r\n                  Excited\r\n                </label>\r\n              </div>\r\n              <div className=\"form-check\">\r\n                <label className=\"form-check-label\">\r\n                  <input type=\"checkbox\"\r\n                    checked={this.state.isLonely}\r\n                    onChange={this.onChangeLonely}\r\n                    className=\"form-check-input\"\r\n                    // value = {wordInfo.lonely}\r\n                  />\r\n                  Lonely\r\n                </label>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                {/* <button className=\"btn btn-success\">\r\n                  Save\r\n                </button> */}\r\n                {/* <button className = \"btn\" onClick={this.handleClick}>\r\n                  Save\r\n                </button> */}\r\n                {/* button that links to the main page using link library  */}\r\n                <Link \r\n                  to={\"/main\"} \r\n                  state={this.state}\r\n                  className=\"btn btn-primary\">Save</Link>\r\n              </div>\r\n            </form>\r\n             {/* BUTTON TO GO NAVIGATE TO THE MAIN PAGE */}\r\n            {/* <p>\r\n                <button onClick={() => this.props.navigate(\"/main\")}>Go to MAIN</button>\r\n            </p> */}\r\n            {/* <p>\r\n              <button onClick={this.props.navigate(\"/main\")}>\r\n                MAIN PAGE\r\n              </button>\r\n            </p> */}\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n    \r\n\r\n// function WithNavigate(props) {\r\n//   let navigate = useNavigate();\r\n//   return <WordSearch {...props} navigate={navigate} />\r\n// }\r\n\r\nexport default WordSearch;\r\n\r\n\r\n    // const [query, setQuery] = useState(\"\");\r\n    // console.log(query);\r\n//     const searchPhotos = async (e) => \r\n//     {\r\n//         e.preventDefault();\r\n//         console.log(\"Submitting the Form\")\r\n//     };\r\n\r\n\r\n\r\n//  function WordSearch() {\r\n//     const [checked, setChecked] = React.useState(false);\r\n\r\n//     const handleChange = () => {\r\n//         setChecked(!checked);\r\n//     }\r\n\r\n//     const unsplash = new Unsplash({\r\n//         accessKey: \"your_Access_Key\",\r\n//       }\r\n//     );\r\n\r\n//     const [state, setState] = React.useState();\r\n\r\n\r\n    // const [word, setWord] = useState(\"\");\r\n    // console.log(word);\r\n\r\n\r\n    // render() {\r\n    //     return (\r\n    //     //  className=\"Words\">\r\n    //          className=\"heading-container\">\r\n    //             className=\"title\">What are you Feeling?</h1> \r\n    //         v>\r\n    //          className=\"words-container\">\r\n    //             m onSubmit={this.onSubmit}>\r\n    //                  className=\"form-check\">\r\n    //                     el className=\"form-check-label\">\r\n    //                     ut type=\"checkbox\"\r\n    //                         ked={this.state.isHappy}\r\n    //                         ange={this.onChangeHappy}\r\n    //                         sName=\"form-check-input\"\r\n                        \r\n    //                     y\r\n    //                     bel>\r\n    //                 v>\r\n    //                  className=\"form-check\">\r\n    //                     el className=\"form-check-label\">\r\n    //                     ut type=\"checkbox\"\r\n    //                         ked={this.state.isSad}\r\n    //                         ange={this.onChangeSad}\r\n    //                         sName=\"form-check-input\"\r\n                        \r\n                        // \r\n    //                     bel>\r\n    //                 v>\r\n    //                  className=\"form-check\">\r\n    //                     el className=\"form-check-label\">\r\n    //                     ut type=\"checkbox\"\r\n    //                         ked={this.state.isMad}\r\n    //                         ange={this.onChangeMad}\r\n    //                         sName=\"form-check-input\"\r\n                        \r\n                        // \r\n    //                     bel>\r\n    //                 v>\r\n    //                  className=\"form-check\">\r\n    //                     el className=\"form-check-label\">\r\n    //                     ut type=\"checkbox\"\r\n    //                         ked={this.state.isExcited}\r\n    //                         ange={this.onChangeExcited}\r\n    //                         sName=\"form-check-input\"\r\n                        \r\n    //                     ted\r\n    //                     bel>\r\n    //                 v>\r\n    //                  className=\"form-check\">\r\n    //                     el className=\"form-check-label\">\r\n    //                     ut type=\"checkbox\"\r\n    //                         ked={this.state.isLonely}\r\n    //                         ange={this.onChangeLonely}\r\n    //                         sName=\"form-check-input\"\r\n                        \r\n    //                     ly\r\n    //                     bel>\r\n    //                 v>\r\n    //                  className=\"form-group\">\r\n    //                     ton className=\"btn btn-success\">\r\n                        // \r\n    //                     tton>\r\n    //                 v>\r\n    //             rm>\r\n    //             BUNCH OF CHECKBOXES WITH WORDS TO SELECT and also a SUBMIT BUTTON to send the results and stuff \r\n    //             m>\r\n    //                 >\r\n    //                     ckbox \r\n    //                         l=\"happy :)\"\r\n    //                         e={checked}\r\n    //                         ange={handleChange}\r\n                        \r\n    //                 v> \r\n    //                  v>\r\n    //                     ton type=\"submit\">Submit</button>\r\n    //                 v> \r\n    //                 s \"My Value\" checked? {checked.toString()}</p>\r\n    //             rm> */}\r\n    //                 </div>\r\n                \r\n    //                 // </div>\r\n    //         );\r\n    //     }\r\n    // }\r\n    \r\n//export default WordSearch;\r\n\r\n// const Checkbox = ({ label, value, onChange }) => {\r\n//     return (\r\n//       <label>\r\n//         <input type=\"checkbox\" checked={value} onChange={onChange} />\r\n//         {label}\r\n//       </label>\r\n//     );\r\n//   };\r\n\r\n\r\n\r\n  // return (//does that <> do something? \r\n  //   <>  \r\n  //     <form className=\"form\">\r\n  //       <label className=\"label\" htmlFor=\"query\">\r\n  //         {\" \"}\r\n  //         📷\r\n  //       </label>\r\n  //       <input\r\n  //         type=\"text\"\r\n  //         name=\"query\"\r\n  //         className=\"input\"\r\n  //         placeholder={`Try \"dog\" or \"apple\"`}\r\n  //         value={query}\r\n  //         onChange={(e) => setQuery(e.target.value)}\r\n  //       />\r\n  //       <button type=\"submit\" className=\"button\">\r\n  //         Search\r\n  //       </button>\r\n  //     </form>\r\n  //   </>\r\n  // );\r\n// }\r\n\r\n/* import React, { useState } from \"react\";\r\nfunction WordSearch() {\r\n    \r\nreturn (\r\n <div>\r\n </div>\r\n);\r\n}\r\nexport default WordSearch;  */\r\n// export default WordSearch;"]},"metadata":{},"sourceType":"module"}