{"ast":null,"code":"var _jsxFileName = \"/Users/flabicamaharjan/Desktop/Cap/client/src/components/WordSearch.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useState, Component } from \"react\";\nimport { useNavigate, Link } from \"react-router-dom\";\nimport Unsplash, { toJson } from \"unsplash-js\"; //unplash api import \n\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport axios from 'axios';\nimport MainPage from './MainPage'; //import Link, { LinkedComponent } from 'valuelink';\n//import { Input } from 'valuelink/tags';\n//const valueArray = []; //initialize empty array\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function WordSearch() // class WordSearch extends Component\n{\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [wordInfo, setWordInfo] = useState({\n    happy: \"happy\",\n    sad: \"sad\",\n    mad: \"mad\",\n    excited: \"excited\",\n    lonely: \"lonely\"\n  }); // ref from: https://www.positronx.io/react-checkbox-tutorial-handle-multiple-checkboxes-values/\n  // 1) set Checkbox initial state of options\n\n  state = {\n    isHappy: false,\n    isSad: false,\n    isMad: false,\n    isExcited: false,\n    isLonely: false\n  }; // 2) React Checkboxes define onChange Methods \n\n  onChangeHappy = () => {\n    this.setState(initialState => ({\n      isHappy: !initialState.isHappy //here?\n\n    })); //or here?\n    // value = {wordInfo.isHappy}\n  };\n\n  onChangeSad = () => {\n    this.setState(initialState => ({\n      isSad: !initialState.isSad\n    }));\n  };\n\n  onChangeMad = () => {\n    this.setState(initialState => ({\n      isMad: !initialState.isMad\n    }));\n  };\n\n  onChangeExcited = () => {\n    this.setState(initialState => ({\n      isExcited: !initialState.isExcited\n    }));\n  };\n\n  onChangeLonely = () => {\n    this.setState(initialState => ({\n      isLonely: !initialState.isLonely\n    }));\n  };\n\n  const handleClick = () => {\n    _s();\n\n    let navigate = useNavigate();\n    let path = `main`;\n    navigate(path);\n  }; //  3) Submit \n\n\n  _s(handleClick, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n    return [useNavigate];\n  });\n\n  onSubmit = e => {\n    e.preventDefault();\n    console.log(\"submitted\");\n    console.log(this.state);\n    console.log(this.wordInfo); // useNavigate('/main')\n    // let navigate = useNavigate();\n    // this.props.navigate(\"/main\");\n  }; // const navigate = useNavigate();\n  // PerformNav = () => {  \n  //   this.props.navigate(\"/main\");\n  // }\n  //render step \n  // render() {\n  // const navigate = useNavigate();\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"What are You Feeling?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-check\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-check-label\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: this.state.isHappy,\n            onChange: this.onChangeHappy,\n            className: \"form-check-input\",\n            value: wordInfo.happy\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 19\n          }, this), \"Happy\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-check\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-check-label\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: this.state.isSad,\n            onChange: this.onChangeSad,\n            className: \"form-check-input\",\n            value: wordInfo.sad\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 19\n          }, this), \"Sad\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-check\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-check-label\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: this.state.isMad,\n            onChange: this.onChangeMad,\n            className: \"form-check-input\",\n            value: wordInfo.mad\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 19\n          }, this), \"Mad\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-check\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-check-label\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: this.state.isExcited,\n            onChange: this.onChangeExcited,\n            className: \"form-check-input\",\n            value: wordInfo.excited\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 19\n          }, this), \"Excited\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-check\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-check-label\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: this.state.isLonely,\n            onChange: this.onChangeLonely,\n            className: \"form-check-input\",\n            value: wordInfo.lonely\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 19\n          }, this), \"Lonely\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/main\",\n          className: \"btn btn-primary\",\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 11\n  }, this);\n} // function WithNavigate(props) {\n//   let navigate = useNavigate();\n//   return <WordSearch {...props} navigate={navigate} />\n// }\n//export default WordSearch;\n// const [query, setQuery] = useState(\"\");\n// console.log(query);\n//     const searchPhotos = async (e) => \n//     {\n//         e.preventDefault();\n//         console.log(\"Submitting the Form\")\n//     };\n//  function WordSearch() {\n//     const [checked, setChecked] = React.useState(false);\n//     const handleChange = () => {\n//         setChecked(!checked);\n//     }\n//     const unsplash = new Unsplash({\n//         accessKey: \"your_Access_Key\",\n//       }\n//     );\n//     const [state, setState] = React.useState();\n// const [word, setWord] = useState(\"\");\n// console.log(word);\n// render() {\n//     return (\n//     //  className=\"Words\">\n//          className=\"heading-container\">\n//             className=\"title\">What are you Feeling?</h1> \n//         v>\n//          className=\"words-container\">\n//             m onSubmit={this.onSubmit}>\n//                  className=\"form-check\">\n//                     el className=\"form-check-label\">\n//                     ut type=\"checkbox\"\n//                         ked={this.state.isHappy}\n//                         ange={this.onChangeHappy}\n//                         sName=\"form-check-input\"\n//                     y\n//                     bel>\n//                 v>\n//                  className=\"form-check\">\n//                     el className=\"form-check-label\">\n//                     ut type=\"checkbox\"\n//                         ked={this.state.isSad}\n//                         ange={this.onChangeSad}\n//                         sName=\"form-check-input\"\n// \n//                     bel>\n//                 v>\n//                  className=\"form-check\">\n//                     el className=\"form-check-label\">\n//                     ut type=\"checkbox\"\n//                         ked={this.state.isMad}\n//                         ange={this.onChangeMad}\n//                         sName=\"form-check-input\"\n// \n//                     bel>\n//                 v>\n//                  className=\"form-check\">\n//                     el className=\"form-check-label\">\n//                     ut type=\"checkbox\"\n//                         ked={this.state.isExcited}\n//                         ange={this.onChangeExcited}\n//                         sName=\"form-check-input\"\n//                     ted\n//                     bel>\n//                 v>\n//                  className=\"form-check\">\n//                     el className=\"form-check-label\">\n//                     ut type=\"checkbox\"\n//                         ked={this.state.isLonely}\n//                         ange={this.onChangeLonely}\n//                         sName=\"form-check-input\"\n//                     ly\n//                     bel>\n//                 v>\n//                  className=\"form-group\">\n//                     ton className=\"btn btn-success\">\n// \n//                     tton>\n//                 v>\n//             rm>\n//             BUNCH OF CHECKBOXES WITH WORDS TO SELECT and also a SUBMIT BUTTON to send the results and stuff \n//             m>\n//                 >\n//                     ckbox \n//                         l=\"happy :)\"\n//                         e={checked}\n//                         ange={handleChange}\n//                 v> \n//                  v>\n//                     ton type=\"submit\">Submit</button>\n//                 v> \n//                 s \"My Value\" checked? {checked.toString()}</p>\n//             rm> */}\n//                 </div>\n//                 // </div>\n//         );\n//     }\n// }\n//export default WordSearch;\n// const Checkbox = ({ label, value, onChange }) => {\n//     return (\n//       <label>\n//         <input type=\"checkbox\" checked={value} onChange={onChange} />\n//         {label}\n//       </label>\n//     );\n//   };\n// return (//does that <> do something? \n//   <>  \n//     <form className=\"form\">\n//       <label className=\"label\" htmlFor=\"query\">\n//         {\" \"}\n//         📷\n//       </label>\n//       <input\n//         type=\"text\"\n//         name=\"query\"\n//         className=\"input\"\n//         placeholder={`Try \"dog\" or \"apple\"`}\n//         value={query}\n//         onChange={(e) => setQuery(e.target.value)}\n//       />\n//       <button type=\"submit\" className=\"button\">\n//         Search\n//       </button>\n//     </form>\n//   </>\n// );\n// }\n\n/* import React, { useState } from \"react\";\n\nfunction WordSearch() {\n    \nreturn (\n <div>\n </div>\n);\n}\nexport default WordSearch;  */\n// export default WordSearch;\n\n_s2(WordSearch, \"hTmwMlUNCXkkNYKU6oFqYvzJf+s=\");\n\n_c = WordSearch;\n\nvar _c;\n\n$RefreshReg$(_c, \"WordSearch\");","map":{"version":3,"sources":["/Users/flabicamaharjan/Desktop/Cap/client/src/components/WordSearch.js"],"names":["React","useState","Component","useNavigate","Link","Unsplash","toJson","axios","MainPage","WordSearch","wordInfo","setWordInfo","happy","sad","mad","excited","lonely","state","isHappy","isSad","isMad","isExcited","isLonely","onChangeHappy","setState","initialState","onChangeSad","onChangeMad","onChangeExcited","onChangeLonely","handleClick","navigate","path","onSubmit","e","preventDefault","console","log"],"mappings":"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AAAA,+BAQE,QAAC,IAAD;AAAM,UAAA,EAAE,EAAC,OAAT;AAAiB,UAAA,SAAS,EAAC,iBAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AARF;AAAA;AAAA;AAAA;AAAA,cAxDF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiFD,C,CAGP;AACA;AACA;AACA;AAEA;AAGI;AACA;AACJ;AACA;AACA;AACA;AACA;AAIA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAGI;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEJ;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;IAnVwBP,U;;KAAAA,U","sourcesContent":["import React, { useState, Component } from \"react\";\nimport { useNavigate, Link} from \"react-router-dom\";\nimport Unsplash, { toJson } from \"unsplash-js\"; //unplash api import \nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport axios from 'axios';\nimport MainPage from './MainPage';\n//import Link, { LinkedComponent } from 'valuelink';\n//import { Input } from 'valuelink/tags';\n\n\n//const valueArray = []; //initialize empty array\n\nexport default function WordSearch() \n// class WordSearch extends Component\n{\n    const [wordInfo, setWordInfo] = useState({\n      happy: \"happy\",\n      sad: \"sad\",\n      mad: \"mad\",\n      excited: \"excited\",\n      lonely: \"lonely\"\n  \n    });\n    // ref from: https://www.positronx.io/react-checkbox-tutorial-handle-multiple-checkboxes-values/\n    // 1) set Checkbox initial state of options\n    state = {\n        isHappy: false,\n        isSad: false,\n        isMad: false,\n        isExcited: false, \n        isLonely: false\n    };\n    // 2) React Checkboxes define onChange Methods \n    onChangeHappy = () => {\n        this.setState(initialState => ({\n          isHappy: !initialState.isHappy,\n          //here?\n        }));\n        //or here?\n        // value = {wordInfo.isHappy}\n     }\n     \n     onChangeSad = () => {\n        this.setState(initialState => ({\n          isSad: !initialState.isSad,\n        }));\n     }\n     \n      onChangeMad = () => {\n        this.setState(initialState => ({\n          isMad: !initialState.isMad,\n        }));\n     }\n     \n     onChangeExcited = () => {\n        this.setState(initialState => ({\n          isExcited: !initialState.isExcited,\n        }));\n     }\n     onChangeLonely = () => {\n        this.setState(initialState => ({\n          isLonely: !initialState.isLonely,\n        }));\n\n     }\n\n     const handleClick = () =>{ \n      let navigate = useNavigate();\n      let path = `main`; \n      navigate(path);\n    }\n    \n    \n    \n    //  3) Submit \n    onSubmit = (e) => {\n      e.preventDefault();\n      console.log(\"submitted\")\n      console.log(this.state);\n      console.log(this.wordInfo);\n      // useNavigate('/main')\n      // let navigate = useNavigate();\n      // this.props.navigate(\"/main\");\n    }\n     \n      // const navigate = useNavigate();\n    // PerformNav = () => {  \n    //   this.props.navigate(\"/main\");\n    // }\n    \n     \n      \n\n      //render step \n      // render() {\n\n        // const navigate = useNavigate();\n\n\n        return (\n          <div className=\"App\">\n            <h2>What are You Feeling?</h2>\n            <form onSubmit={this.onSubmit}>\n              <div className=\"form-check\">\n                <label className=\"form-check-label\">\n                  <input type=\"checkbox\"\n                    checked={this.state.isHappy}\n                    onChange={this.onChangeHappy}\n                    className=\"form-check-input\"\n                    value = {wordInfo.happy}\n                  />\n                  Happy\n                </label>\n              </div>\n              <div className=\"form-check\">\n                <label className=\"form-check-label\">\n                  <input type=\"checkbox\"\n                    checked={this.state.isSad}\n                    onChange={this.onChangeSad}\n                    className=\"form-check-input\"\n                    value = {wordInfo.sad}\n                  />\n                  Sad\n                </label>\n              </div>\n              <div className=\"form-check\">\n                <label className=\"form-check-label\">\n                  <input type=\"checkbox\"\n                    checked={this.state.isMad}\n                    onChange={this.onChangeMad}\n                    className=\"form-check-input\"\n                    value = {wordInfo.mad}\n                  />\n                  Mad\n                </label>\n              </div>\n              <div className=\"form-check\">\n                <label className=\"form-check-label\">\n                  <input type=\"checkbox\"\n                    checked={this.state.isExcited}\n                    onChange={this.onChangeExcited}\n                    className=\"form-check-input\"\n                    value = {wordInfo.excited}\n                  />\n                  Excited\n                </label>\n              </div>\n              <div className=\"form-check\">\n                <label className=\"form-check-label\">\n                  <input type=\"checkbox\"\n                    checked={this.state.isLonely}\n                    onChange={this.onChangeLonely}\n                    className=\"form-check-input\"\n                    value = {wordInfo.lonely}\n                  />\n                  Lonely\n                </label>\n              </div>\n              <div className=\"form-group\">\n                {/* <button className=\"btn btn-success\">\n                  Save\n                </button> */}\n                {/* <button className = \"btn\" onClick={this.handleClick}>\n                  Save\n                </button> */}\n                {/* button that links to the main page using link library  */}\n                <Link to=\"/main\" className=\"btn btn-primary\">Save</Link>\n              </div>\n            </form>\n             {/* BUTTON TO GO NAVIGATE TO THE MAIN PAGE */}\n            {/* <p>\n                <button onClick={() => this.props.navigate(\"/main\")}>Go to MAIN</button>\n            </p> */}\n            {/* <p>\n              <button onClick={this.props.navigate(\"/main\")}>\n                MAIN PAGE\n              </button>\n            </p> */}\n          </div>\n        );\n      }\n    \n\n// function WithNavigate(props) {\n//   let navigate = useNavigate();\n//   return <WordSearch {...props} navigate={navigate} />\n// }\n\n//export default WordSearch;\n\n\n    // const [query, setQuery] = useState(\"\");\n    // console.log(query);\n//     const searchPhotos = async (e) => \n//     {\n//         e.preventDefault();\n//         console.log(\"Submitting the Form\")\n//     };\n\n\n\n//  function WordSearch() {\n//     const [checked, setChecked] = React.useState(false);\n\n//     const handleChange = () => {\n//         setChecked(!checked);\n//     }\n\n//     const unsplash = new Unsplash({\n//         accessKey: \"your_Access_Key\",\n//       }\n//     );\n\n//     const [state, setState] = React.useState();\n\n\n    // const [word, setWord] = useState(\"\");\n    // console.log(word);\n\n\n    // render() {\n    //     return (\n    //     //  className=\"Words\">\n    //          className=\"heading-container\">\n    //             className=\"title\">What are you Feeling?</h1> \n    //         v>\n    //          className=\"words-container\">\n    //             m onSubmit={this.onSubmit}>\n    //                  className=\"form-check\">\n    //                     el className=\"form-check-label\">\n    //                     ut type=\"checkbox\"\n    //                         ked={this.state.isHappy}\n    //                         ange={this.onChangeHappy}\n    //                         sName=\"form-check-input\"\n                        \n    //                     y\n    //                     bel>\n    //                 v>\n    //                  className=\"form-check\">\n    //                     el className=\"form-check-label\">\n    //                     ut type=\"checkbox\"\n    //                         ked={this.state.isSad}\n    //                         ange={this.onChangeSad}\n    //                         sName=\"form-check-input\"\n                        \n                        // \n    //                     bel>\n    //                 v>\n    //                  className=\"form-check\">\n    //                     el className=\"form-check-label\">\n    //                     ut type=\"checkbox\"\n    //                         ked={this.state.isMad}\n    //                         ange={this.onChangeMad}\n    //                         sName=\"form-check-input\"\n                        \n                        // \n    //                     bel>\n    //                 v>\n    //                  className=\"form-check\">\n    //                     el className=\"form-check-label\">\n    //                     ut type=\"checkbox\"\n    //                         ked={this.state.isExcited}\n    //                         ange={this.onChangeExcited}\n    //                         sName=\"form-check-input\"\n                        \n    //                     ted\n    //                     bel>\n    //                 v>\n    //                  className=\"form-check\">\n    //                     el className=\"form-check-label\">\n    //                     ut type=\"checkbox\"\n    //                         ked={this.state.isLonely}\n    //                         ange={this.onChangeLonely}\n    //                         sName=\"form-check-input\"\n                        \n    //                     ly\n    //                     bel>\n    //                 v>\n    //                  className=\"form-group\">\n    //                     ton className=\"btn btn-success\">\n                        // \n    //                     tton>\n    //                 v>\n    //             rm>\n    //             BUNCH OF CHECKBOXES WITH WORDS TO SELECT and also a SUBMIT BUTTON to send the results and stuff \n    //             m>\n    //                 >\n    //                     ckbox \n    //                         l=\"happy :)\"\n    //                         e={checked}\n    //                         ange={handleChange}\n                        \n    //                 v> \n    //                  v>\n    //                     ton type=\"submit\">Submit</button>\n    //                 v> \n    //                 s \"My Value\" checked? {checked.toString()}</p>\n    //             rm> */}\n    //                 </div>\n                \n    //                 // </div>\n    //         );\n    //     }\n    // }\n    \n//export default WordSearch;\n\n// const Checkbox = ({ label, value, onChange }) => {\n//     return (\n//       <label>\n//         <input type=\"checkbox\" checked={value} onChange={onChange} />\n//         {label}\n//       </label>\n//     );\n//   };\n\n\n\n  // return (//does that <> do something? \n  //   <>  \n  //     <form className=\"form\">\n  //       <label className=\"label\" htmlFor=\"query\">\n  //         {\" \"}\n  //         📷\n  //       </label>\n  //       <input\n  //         type=\"text\"\n  //         name=\"query\"\n  //         className=\"input\"\n  //         placeholder={`Try \"dog\" or \"apple\"`}\n  //         value={query}\n  //         onChange={(e) => setQuery(e.target.value)}\n  //       />\n  //       <button type=\"submit\" className=\"button\">\n  //         Search\n  //       </button>\n  //     </form>\n  //   </>\n  // );\n// }\n\n/* import React, { useState } from \"react\";\n\nfunction WordSearch() {\n    \nreturn (\n <div>\n </div>\n);\n}\nexport default WordSearch;  */\n// export default WordSearch;"]},"metadata":{},"sourceType":"module"}