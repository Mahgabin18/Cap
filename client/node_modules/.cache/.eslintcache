[{"C:\\Users\\acer\\Desktop\\Cap\\client\\src\\index.js":"1","C:\\Users\\acer\\Desktop\\Cap\\client\\src\\App.js":"2","C:\\Users\\acer\\Desktop\\Cap\\client\\src\\reportWebVitals.js":"3","C:\\Users\\acer\\Desktop\\Cap\\client\\src\\components\\querySearch.js":"4","C:\\Users\\acer\\Desktop\\Cap\\client\\src\\components\\Login.js":"5","C:\\Users\\acer\\Desktop\\Cap\\client\\src\\components\\MainPage.js":"6","C:\\Users\\acer\\Desktop\\Cap\\client\\src\\components\\FavoritesPage.js":"7","C:\\Users\\acer\\Desktop\\Cap\\client\\src\\components\\WordSearch.js":"8","C:\\Users\\acer\\Desktop\\Cap\\client\\src\\components\\Home\\home.js":"9","C:\\Users\\acer\\Desktop\\Cap\\client\\src\\models\\Emotions.js":"10","C:\\Users\\acer\\Desktop\\Cap\\client\\src\\components\\Form\\Form.js":"11","C:\\Users\\acer\\Desktop\\Cap\\client\\src\\components\\Search\\searchbar.js":"12","C:\\Users\\acer\\Desktop\\Cap\\client\\src\\components\\Search\\searchQuery.js":"13","C:\\Users\\acer\\Desktop\\Cap\\client\\src\\pages\\Login.js":"14","C:\\Users\\acer\\Desktop\\Cap\\client\\src\\pages\\User.js":"15","C:\\Users\\acer\\Desktop\\Cap\\client\\src\\Spotistuff\\Login.js":"16","C:\\Users\\acer\\Desktop\\Cap\\client\\src\\Spotistuff\\Details.js":"17","C:\\Users\\acer\\Desktop\\Cap\\client\\src\\Spotistuff\\Search.js":"18","C:\\Users\\acer\\Desktop\\Cap\\client\\src\\Spotistuff\\SearchAndSearchRes.js":"19","C:\\Users\\acer\\Desktop\\Cap\\client\\src\\Spotistuff\\Playlists.js":"20","C:\\Users\\acer\\Desktop\\Cap\\client\\src\\Spotistuff\\Songs.js":"21","C:\\Users\\acer\\Desktop\\Cap\\client\\src\\Spotistuff\\Online.js":"22"},{"size":520,"mtime":1652567968283,"results":"23","hashOfConfig":"24"},{"size":3193,"mtime":1652568903315,"results":"25","hashOfConfig":"24"},{"size":375,"mtime":1652567857273,"results":"26","hashOfConfig":"24"},{"size":236,"mtime":1652567968279,"results":"27","hashOfConfig":"24"},{"size":1709,"mtime":1652567857269,"results":"28","hashOfConfig":"24"},{"size":9818,"mtime":1652567968276,"results":"29","hashOfConfig":"24"},{"size":1024,"mtime":1652567968274,"results":"30","hashOfConfig":"24"},{"size":15010,"mtime":1652567968278,"results":"31","hashOfConfig":"24"},{"size":226,"mtime":1652567968275,"results":"32","hashOfConfig":"24"},{"size":277,"mtime":1652567968283,"results":"33","hashOfConfig":"24"},{"size":2790,"mtime":1652567968275,"results":"34","hashOfConfig":"24"},{"size":568,"mtime":1652567968278,"results":"35","hashOfConfig":"24"},{"size":0,"mtime":1652567968277,"results":"36","hashOfConfig":"24"},{"size":1243,"mtime":1652567857272,"results":"37","hashOfConfig":"24"},{"size":4822,"mtime":1649860333364,"results":"38","hashOfConfig":"24"},{"size":1125,"mtime":1649391433593,"results":"39","hashOfConfig":"24"},{"size":5296,"mtime":1649391433593,"results":"40","hashOfConfig":"24"},{"size":498,"mtime":1649391433596,"results":"41","hashOfConfig":"24"},{"size":1288,"mtime":1649391433597,"results":"42","hashOfConfig":"24"},{"size":989,"mtime":1649391433595,"results":"43","hashOfConfig":"24"},{"size":2915,"mtime":1649391433597,"results":"44","hashOfConfig":"24"},{"size":3964,"mtime":1649391433594,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1tqmejf",{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":1,"source":"65"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109"},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116"},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120"},"C:\\Users\\acer\\Desktop\\Cap\\client\\src\\index.js",[],[],"C:\\Users\\acer\\Desktop\\Cap\\client\\src\\App.js",["121"],[],"//import logo from './logo.svg';\r\nimport React from \"react\";\r\n// import { useState } from 'react'\r\n// import './App.css'; \r\nimport {\r\n  BrowserRouter,\r\n  Routes,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\nimport Login from \"./components/Login\";\r\nimport Loginp from './pages/Login'\r\nimport User from \"./pages/User\"\r\nimport { MainPage } from \"./components/MainPage\";\r\nimport WordSearch from \"./components/WordSearch\";\r\nimport QuerySearch from \"./components/querySearch\";\r\nimport Home from \"./components/Home/home\"\r\nimport FavoritesPage from \"./components/FavoritesPage\";\r\nexport default function App() {\r\n  \r\n  if(!localStorage.getItem('favoriteImages')){\r\n    localStorage.setItem('favoriteImages', '');\r\n  } else if(typeof(JSON.parse(localStorage.getItem('favoriteImages'))) != 'object'){\r\n    localStorage.setItem('favoriteImages', '');\r\n  } else{\r\n    let images = JSON.parse(localStorage.getItem('favoriteImages'));\r\n    if(images[0].urls === undefined || images[0].id === undefined || images[0].user === undefined){\r\n      localStorage.setItem('favoriteImages', '');\r\n    }\r\n  }\r\n\r\n  return (\r\n      <BrowserRouter>\r\n        <Routes>\r\n          <Route path=\"/\" element={<Login/>} />\r\n          <Route exact path=\"/login\" element={<Loginp />} />\r\n          <Route path=\"/userpage\" element={<User />} />\r\n          <Route path=\"/wordsearch\" element={<WordSearch/>} />\r\n          <Route path={`/main`} element={<MainPage />} />\r\n          <Route path=\"/main2\" element={<Home />} />\r\n          <Route path = \"/query\" element = {<QuerySearch/>}/>\r\n          <Route path=\"/favorites\" element={<FavoritesPage />}> </Route>\r\n        </Routes>\r\n      </BrowserRouter>\r\n    );\r\n} \r\n\r\n\r\n\r\n// function App() {\r\n//   const [name, setName] = useState('')\r\n//   const [email, setEmail] = useState('')\r\n// \tconst [password, setPassword] = useState('')\r\n  \r\n//   async function registerUser(event){\r\n//     event.preventDefault()\r\n//     const response = await fetch('http://localhost:1337/api/register',{\r\n//     method: 'POST',\r\n//     headers: {\r\n//         'Content-Type': 'application/json',\r\n//       },\r\n//       body: JSON.stringify({\r\n//         name,\r\n//         email,\r\n//         password,\r\n//       }),\r\n//     })\r\n//     const data = await response.json()\r\n//     console.log(data)\r\n//   }\r\n//   return (\r\n//     <div>\r\n//       <h1>Register</h1>   \r\n//       <form onSubmit={registerUser}>\r\n//         <input\r\n//         value={name}\r\n//         onChange={(e) => setName(e.target.value)}\r\n//         type=\"text\"\r\n//         placeholder=\"Name\"\r\n//          /><br/>\r\n//         <input\r\n//         value={email}\r\n//         onChange={(e) => setEmail(e.target.value)}\r\n//         type=\"email\"\r\n//         placeholder=\"Email\"\r\n//          /><br/>\r\n//         <input\r\n//         value={password}\r\n//         onChange={(e) => setPassword(e.target.value)}\r\n//         type=\"password\"\r\n//         placeholder=\"Password\"\r\n//          /><br/>\r\n//          <input type=\"submit\" value=\"Register\" />\r\n//       </form>\r\n        \r\n//         <a href=\"./wordsearch.js\" target=\"_blank\">\r\n//         <Button> Link Button </Button>\r\n// </a>\r\n      \r\n//      </div>\r\n//   );\r\n// }\r\n\r\n// export default App;\r\n","C:\\Users\\acer\\Desktop\\Cap\\client\\src\\reportWebVitals.js",[],[],"C:\\Users\\acer\\Desktop\\Cap\\client\\src\\components\\querySearch.js",[],[],"C:\\Users\\acer\\Desktop\\Cap\\client\\src\\components\\Login.js",[],[],"C:\\Users\\acer\\Desktop\\Cap\\client\\src\\components\\MainPage.js",["122","123","124","125","126","127","128","129","130","131","132","133","134"],[],"import ReactDOM from \"react-dom\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport React, { Fragment, useEffect, useState } from \"react\";\r\nimport \"./styling/MainPage.css\";\r\nimport { createApi } from \"unsplash-js\";\r\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport Emotions from '../models/Emotions';\r\n\r\n//heyy\r\n//testing\r\n\r\nconst api = createApi({\r\n  // Don't forget to set your access token here!\r\n  // See https://unsplash.com/developers\r\n  accessKey: \"p55OV837XTRngIgJA4phnnQHufPJowmk9Fq7vXaCYes\"\r\n});\r\n\r\nconst setImageFavoriteStatus = (id, photo) => {\r\n  const local = localStorage.getItem(\"favoriteImages\"); \r\n\r\n  if(local.length === 0) photo.liked_by_user = false;\r\n  else{\r\n    const images = JSON.parse(local);\r\n    if(images.findIndex(image => image.id === id) != -1){\r\n      photo.liked_by_user = true;\r\n    } else{\r\n      photo.liked_by_user = false;\r\n    }\r\n  }\r\n}\r\n\r\nconst getLikedPhotos = () => {\r\n  const local = localStorage.getItem(\"favoriteImages\"); \r\n  if(local.length === 0){\r\n    return [];\r\n  } else{\r\n    return JSON.parse(local);\r\n  }\r\n}\r\n\r\n// This will show the actual photo component and it takes 'photo' as a paremeter which will be given once you click search\r\nconst PhotoComp = ({ photo }) => {\r\n  \r\n  const { user, urls, id } = photo;\r\n  const [isAnimating, setOnHoldState] = useState(false);\r\n  let likedPhotos = getLikedPhotos();\r\n  setImageFavoriteStatus(id, photo); \r\n  const [isClicked, setClickedState] = useState(photo.liked_by_user);\r\n  \r\n  // setImageFavoriteStatus(id, photo);\r\n\r\n  function handleLikeClick(id, photo){\r\n    setOnHoldState(false);\r\n    if(!isClicked){\r\n      if(!likedPhotos.includes(id)){\r\n        likedPhotos.push({id: id, urls: photo.urls, user: photo.user, liked_by_user: true});\r\n      }\r\n      photo.liked_by_user = true;\r\n      setClickedState(true);\r\n    } else if(isClicked){\r\n      likedPhotos = likedPhotos.filter(lPhoto => lPhoto.id !== id);\r\n      photo.liked_by_user = false;\r\n      setClickedState(false);\r\n    }\r\n    localStorage.setItem('favoriteImages', JSON.stringify(likedPhotos));\r\n  }\r\n\r\n  function handleMouseHold(){\r\n    if(!isAnimating) setOnHoldState(true);\r\n  }\r\n\r\n  return (\r\n    /*\r\n      Fragments allow you to write cleaner, readable and maintainable code. They are not a replacement for divs in your HTML, but they offer a better approach to structuring and rendering your markup if you’re using unnecessary divs in your code.\r\n      You can avoid issues that break your layouts or potentially optimize your markup rendering time using fragments. However, you should only use them when needed. If you need a wrapper to your JSX for styling, use a div instead. \r\n    */\r\n    <Fragment>\r\n      <div className=\"image-text-container\">\r\n        <div className=\"image-like-container\">\r\n          <img className=\"img\" src={urls.regular} />\r\n          <button className=\"feed-button\" onMouseDown={handleMouseHold} onClick={() => handleLikeClick(id, photo)}>\r\n            {\r\n              !photo.liked_by_user?\r\n              <img\r\n                className={\"white-outline feed-logo \" + (isAnimating? 'logo-holding': '')}\r\n                src={require(\"../images/whiteoutline.png\")}\r\n              />\r\n              :\r\n              <img\r\n                className={\"feed-logo \" + (isAnimating? 'logo-holding': '')}\r\n                src={require(\"../images/redheart.png\")}\r\n              />\r\n            }\r\n          </button>\r\n        </div>\r\n        <a\r\n          className=\"credit\"\r\n          target=\"_blank\"\r\n          href={`https://unsplash.com/@${user.username}`}\r\n        >\r\n          {user.name}\r\n        </a>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst Body = (props) => {\r\n  // FROM THE GUIDE: https://www.digitalocean.com/community/tutorials/how-to-build-a-photo-search-app-with-react-using-the-unsplash-api#step-5-setting-state-using-search-query\r\n  // this is tied to the Search Box inputs\r\n  const [query, setQuery] = useState(\"\");\r\n  // FROM DEMO CODE: https://stackblitz.com/edit/unsplash-js-javascript?file=src%2Findex.js\r\n  // this is for the searching the photos with unsplash and the data will be linked to 'photo' in the Body render with .map\r\n  const [data, setPhotosResponse] = useState(null);\r\n  const navigate = useNavigate();\r\n  // useEffect(() => {\r\n  //   async function searchPhotos() {\r\n  //     api.search \r\n  //       .getPhotos({ query: query, orientation: \"landscape\" })\r\n  //       .then((result) => {\r\n  //         setPhotosResponse(result);\r\n  //       })\r\n  //       .catch(() => {\r\n  //         console.log(\"something went wrong!\");\r\n  //       });\r\n  //   }\r\n  //   searchPhotos();\r\n  // }, [query]);\r\n\r\n  // MIXTURE OF GUIDE+DEMO+GOOGLEThis calls the api to search for the photos with the search query input\r\n  // make sure this is only called once in the 'onSubmit' so it can only search when the form is submitted\r\n  async function searchPhotos() {\r\n    api.search\r\n      .getPhotos({ query: query, orientation: \"landscape\" })\r\n      .then((result) => {\r\n        setPhotosResponse(result.response.results);\r\n      })\r\n      .catch(() => {\r\n        console.log(\"something went wrong!\");\r\n      });\r\n  }\r\n\r\n  async function initializeEmotions(emotion){\r\n    let data = []; \r\n    await api.search\r\n    .getPhotos({ query: emotion, orientation: \"landscape\" })\r\n    .then((result) => {\r\n      data = result.response.results;\r\n    })\r\n    .catch(() => {\r\n      console.log(\"something went wrong!\");\r\n    });\r\n    return data;\r\n  }\r\n\r\n  async function randomShuffleArray(inputArr){\r\n    let shuffledArr = await inputArr\r\n      .map(value => ({value, sort: Math.random()}))\r\n      .sort((a,b) => a.sort - b.sort)\r\n      .map(({ value }) => value);\r\n\r\n    return shuffledArr;\r\n  }\r\n\r\n\r\n  // needed to actually load things in?\r\n  // DO NOT call the useEffect React Hook inside the return render ; can only be called in the function component aka up here\r\n  // SHOUTOUT STACKOVERFLOW: https://stackoverflow.com/questions/62248741/how-to-apply-useeffect-based-on-form-submission-in-react\r\n  // \"If you want fetch data onload of your functional component, you may use useEffect like this :\"\r\n  useEffect(async () => {\r\n    if(props?.emotions){\r\n      let prevResult = [];\r\n      for(const emotion of props.emotions){\r\n        let newResult = await initializeEmotions(emotion);\r\n        prevResult = prevResult.concat(newResult.filter((item) => \r\n          prevResult.findIndex((result) => result.id == item.id) < 0\r\n        ));\r\n      }\r\n      prevResult = await randomShuffleArray(prevResult);\r\n      setPhotosResponse(prevResult);\r\n    }\r\n  }, []);\r\n  // \"And you want your fetch call to be triggered with button click :\"\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    searchPhotos();\r\n  };\r\n\r\n  // from DEMO\r\n  if (data === null) {\r\n    return <div>Loading...</div>;\r\n  } else if (data.errors) {\r\n    return (\r\n      <div>\r\n        <div>{data.errors[0]}</div>\r\n        <div>PS: Make sure to set your access token!</div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"main-page-container\">\r\n          {/* from GUIDE */}\r\n          <div className=\"main-page-header\">\r\n            <form className=\"form\" onSubmit={handleSubmit}>\r\n              <div className=\"form-flex\">\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"query\"\r\n                  className=\"input\"\r\n                  placeholder={`Try \"dog\" or \"apple\"`}\r\n                  value={query}\r\n                  onChange={(e) => setQuery(e.target.value)}\r\n                />\r\n                <label className=\"label\" htmlFor=\"query\">\r\n                  {\" \"}\r\n                  📷\r\n                </label>\r\n              </div>\r\n              <button type=\"submit\" className=\"button\">\r\n                Search\r\n              </button>\r\n            </form>\r\n            <button className=\"button-favorite button\" onClick={() => navigate(\"/favorites\")}>\r\n              Favorites\r\n            </button>\r\n          </div>\r\n        {/* from DEMO */}\r\n        <div className=\"feed\">\r\n          {data.map((photo) => (\r\n            <div key={photo.id} className=\"li\">\r\n              <PhotoComp photo={photo} />\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst MainPage = () => {\r\n  const {state} = useLocation();\r\n  const [words, changeWords] = useState();\r\n\r\n  useEffect(async () => {\r\n    await convertStateToSearchTerms(state);\r\n  }, [])\r\n\r\n  const convertStateToSearchTerms = async (boolStates) => {\r\n    if(!boolStates) boolStates = {};\r\n    let boolArr = Object.keys(boolStates)?.map(key => {\r\n      return {[key]: boolStates[key]};\r\n    });\r\n    let wordArr = [];\r\n    await boolArr.forEach(element => {\r\n      if (element.isHappy)\r\n        wordArr.push(Emotions.happy);\r\n      else if (element.isSad)\r\n        wordArr.push(Emotions.sad);\r\n      else if (element.isMad)\r\n        wordArr.push(Emotions.mad);\r\n      else if (element.isExcited)\r\n        wordArr.push(Emotions.excited);\r\n      else if (element.isLonely)\r\n        wordArr.push(Emotions.lonely);\r\n      else if (element.isDisgust)\r\n        wordArr.push(Emotions.disgust);\r\n      else if (element.isPeaceful)\r\n        wordArr.push(Emotions.peaceful);\r\n      else if (element.isScared)\r\n        wordArr.push(Emotions.scared);\r\n      else if (element.isCrazy)\r\n        wordArr.push(Emotions.crazy);\r\n      else if (element.isHungry)\r\n        wordArr.push(Emotions.hungry);\r\n      else if (element.isEnergetic)\r\n        wordArr.push(Emotions.energetic);\r\n    });\r\n\r\n    changeWords(wordArr);\r\n  }\r\n\r\n  return (\r\n    <main className=\"root\">\r\n      {words && words.length != 0 && <Body emotions={words}/>}\r\n      {words && words.length === 0 && <Body emotions={[]}/>}\r\n    </main>\r\n  );\r\n};\r\nexport {MainPage, PhotoComp};\r\n","C:\\Users\\acer\\Desktop\\Cap\\client\\src\\components\\FavoritesPage.js",["135","136","137","138","139","140"],[],"import ReactDOM from \"react-dom\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport React, { Fragment, useEffect, useState } from \"react\";\r\nimport { PhotoComp } from \"./MainPage\";\r\nimport \"./styling/FavoritesPage.css\";\r\n\r\nconst getLikedPhotos = () => {\r\n  const local = localStorage.getItem(\"favoriteImages\"); \r\n  if(local.length === 0){\r\n    return [];\r\n  } else{\r\n    return JSON.parse(local);\r\n  }\r\n}\r\n\r\n\r\nconst FavoritesPage = () => {\r\n\r\n  let data = getLikedPhotos();\r\n\r\n  return (\r\n    <div className=\"favorites-container\">\r\n      \r\n      <div className=\"favorites-header-container\">\r\n        <div className=\"favorites-header\">Favorites</div> \r\n        <div className=\"favorites-subtitle\">Photos that you have liked.</div>\r\n      </div>\r\n\r\n      <div className=\"feed\">\r\n          {data.map((photo) => (\r\n            <div key={photo.id} className=\"li\">\r\n              <PhotoComp photo={photo} />\r\n            </div>\r\n          ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FavoritesPage;","C:\\Users\\acer\\Desktop\\Cap\\client\\src\\components\\WordSearch.js",["141","142","143","144","145"],[],"import React, { useState, Component } from \"react\";\r\nimport { useNavigate, Link} from \"react-router-dom\";\r\nimport Unsplash, { toJson } from \"unsplash-js\"; //unplash api import \r\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport axios from 'axios';\r\nimport MainPage from './MainPage';\r\n\r\n\r\n//import Link, { LinkedComponent } from 'valuelink';\r\n//import { Input } from 'valuelink/tags';\r\n\r\n\r\n//const valueArray = []; //initialize empty array\r\n\r\n\r\n\r\n//export default function WordSearch() \r\nclass WordSearch extends Component\r\n{\r\n    //  Checkboxes = () => {\r\n    //   const [wordInfo, setWordInfo] = useState(\"\");\r\n    //   const word = '';\r\n    // }\r\n\r\n    // create an array state to store the word form data\r\n    //  [wordInfo, setWordInfo] = useState([]);\r\n    // word = '';\r\n\r\n    //  addEntryClick = () => {\r\n    //   setWordInfo([...wordInfo, word]);\r\n    // };\r\n\r\n    // ref from: https://www.positronx.io/react-checkbox-tutorial-handle-multiple-checkboxes-values/\r\n    // 1) set Checkbox initial state of options\r\n    state = {\r\n        isHappy: false,\r\n        isSad: false,\r\n        isMad: false,\r\n        isExcited: false, \r\n        isLonely: false,\r\n        isDisgust: false,\r\n        isPeaceful: false,\r\n        isScared: false,\r\n        isCrazy: false,\r\n        isHungry: false,\r\n        isEnergetic: false,\r\n    };\r\n    // 2) React Checkboxes define onChange Methods \r\n     onChangeHappy = (event) => {\r\n        this.setState(initialState => ({\r\n          isHappy: !initialState.isHappy,\r\n        }));\r\n     }\r\n     \r\n    onChangeSad = () => {\r\n        this.setState(initialState => ({\r\n          isSad: !initialState.isSad,\r\n        }));\r\n     }\r\n     \r\n     onChangeMad = () => {\r\n        this.setState(initialState => ({\r\n          isMad: !initialState.isMad,\r\n        }));\r\n     }\r\n     \r\n     onChangeExcited = () => {\r\n        this.setState(initialState => ({\r\n          isExcited: !initialState.isExcited,\r\n        }));\r\n     }\r\n     onChangeLonely = () => {\r\n        this.setState(initialState => ({\r\n          isLonely: !initialState.isLonely,\r\n        }));\r\n\r\n     }\r\n     onChangeDisgust = () => {\r\n        this.setState(initialState => ({\r\n          isDisgust: !initialState.isDisgust,\r\n        }));\r\n\r\n     }\r\n     onChangePeaceful = () => {\r\n        this.setState(initialState => ({\r\n          isPeaceful: !initialState.isPeaceful,\r\n        }));\r\n\r\n     }\r\n     onChangeScared = () => {\r\n        this.setState(initialState => ({\r\n          isScared: !initialState.isScared,\r\n        }));\r\n\r\n     }\r\n     onChangeCrazy = () => {\r\n        this.setState(initialState => ({\r\n          isCrazy: !initialState.isCrazy,\r\n        }));\r\n\r\n     }\r\n     onChangeHungry = () => {\r\n        this.setState(initialState => ({\r\n          isHungry: !initialState.isHungry,\r\n        }));\r\n\r\n     }\r\n     onChangeEnergetic = () => {\r\n        this.setState(initialState => ({\r\n          isEnergetic: !initialState.isEnergetic,\r\n        }));\r\n\r\n     }\r\n\r\n      HandleClick = () =>{ \r\n      let navigate = useNavigate();\r\n      let path = `main`; \r\n      navigate(path);\r\n    };\r\n    \r\n    \r\n    \r\n    //  3) Submit \r\n     onSubmit = (e) => {\r\n      e.preventDefault();\r\n      \r\n      // if (this.state.isHappy === true){\r\n      //   word = 'happy';\r\n      //   addEntryClick();\r\n      // }\r\n\r\n      console.log(\"submitted\")\r\n      console.log(this.state);\r\n      console.log(this.wordInfo);\r\n      // useNavigate('/main')\r\n      // let navigate = useNavigate();\r\n      // this.props.navigate(\"/main\");\r\n    };\r\n     \r\n      // const navigate = useNavigate();\r\n    // PerformNav = () => {  \r\n    //   this.props.navigate(\"/main\");\r\n    // }\r\n    \r\n     \r\n      \r\n\r\n      //render step \r\n      render() {\r\n\r\n        // const navigate = useNavigate();\r\n\r\n\r\n        return (\r\n          <div className=\"App\">\r\n            <h2>What are You Feeling?</h2>\r\n            <form onSubmit={this.onSubmit} > \r\n              <div className=\"form-check\">\r\n                <label className=\"form-check-label\">\r\n                  <input type=\"checkbox\"\r\n                    checked={this.state.isHappy}\r\n                    onChange={this.onChangeHappy}\r\n                    className=\"form-check-input\"\r\n                  />\r\n                  Happy\r\n                </label>\r\n              </div>\r\n              <div className=\"form-check\">\r\n                <label className=\"form-check-label\">\r\n                  <input type=\"checkbox\"\r\n                    checked={this.state.isSad}\r\n                    onChange={this.onChangeSad}\r\n                    className=\"form-check-input\"\r\n                    // value = {wordInfo.sad}\r\n                  />\r\n                  Sad\r\n                </label>\r\n              </div>\r\n              <div className=\"form-check\">\r\n                <label className=\"form-check-label\">\r\n                  <input type=\"checkbox\"\r\n                    checked={this.state.isMad}\r\n                    onChange={this.onChangeMad}\r\n                    className=\"form-check-input\"\r\n                    // value = {wordInfo.mad}\r\n                  />\r\n                  Mad\r\n                </label>\r\n              </div>\r\n              <div className=\"form-check\">\r\n                <label className=\"form-check-label\">\r\n                  <input type=\"checkbox\"\r\n                    checked={this.state.isExcited}\r\n                    onChange={this.onChangeExcited}\r\n                    className=\"form-check-input\"\r\n                    // value = {wordInfo.excited}\r\n                  />\r\n                  Excited\r\n                </label>\r\n              </div>\r\n              <div className=\"form-check\">\r\n                <label className=\"form-check-label\">\r\n                  <input type=\"checkbox\"\r\n                    checked={this.state.isLonely}\r\n                    onChange={this.onChangeLonely}\r\n                    className=\"form-check-input\"\r\n                    // value = {wordInfo.lonely}\r\n                  />\r\n                  Lonely\r\n                </label>\r\n              </div>\r\n              <div className=\"form-check\">\r\n                <label className=\"form-check-label\">\r\n                  <input type=\"checkbox\"\r\n                    checked={this.state.isDisgust}\r\n                    onChange={this.onChangeDisgust}\r\n                    className=\"form-check-input\"\r\n                    // value = {wordInfo.lonely}\r\n                  />\r\n                  Disgust\r\n                </label>\r\n              </div>\r\n              <div className=\"form-check\">\r\n                <label className=\"form-check-label\">\r\n                  <input type=\"checkbox\"\r\n                    checked={this.state.isPeaceful}\r\n                    onChange={this.onChangePeaceful}\r\n                    className=\"form-check-input\"\r\n                    // value = {wordInfo.lonely}\r\n                  />\r\n                  Peaceful\r\n                </label>\r\n              </div>\r\n              <div className=\"form-check\">\r\n                <label className=\"form-check-label\">\r\n                  <input type=\"checkbox\"\r\n                    checked={this.state.isScared}\r\n                    onChange={this.onChangeScared}\r\n                    className=\"form-check-input\"\r\n                    // value = {wordInfo.lonely}\r\n                  />\r\n                  Scared\r\n                </label>\r\n              </div>\r\n              <div className=\"form-check\">\r\n                <label className=\"form-check-label\">\r\n                  <input type=\"checkbox\"\r\n                    checked={this.state.isCrazy}\r\n                    onChange={this.onChangeCrazy}\r\n                    className=\"form-check-input\"\r\n                    // value = {wordInfo.lonely}\r\n                  />\r\n                  Crazy\r\n                </label>\r\n              </div>\r\n              <div className=\"form-check\">\r\n                <label className=\"form-check-label\">\r\n                  <input type=\"checkbox\"\r\n                    checked={this.state.isHungry}\r\n                    onChange={this.onChangeHungry}\r\n                    className=\"form-check-input\"\r\n                    // value = {wordInfo.lonely}\r\n                  />\r\n                  Hungry\r\n                </label>\r\n              </div>\r\n              <div className=\"form-check\">\r\n                <label className=\"form-check-label\">\r\n                  <input type=\"checkbox\"\r\n                    checked={this.state.isEnergetic}\r\n                    onChange={this.onChangeEnergetic}\r\n                    className=\"form-check-input\"\r\n                    // value = {wordInfo.lonely}\r\n                  />\r\n                  Energetic\r\n                </label>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                {/* <button className=\"btn btn-success\">\r\n                  Save\r\n                </button> */}\r\n                {/* <button className = \"btn\" onClick={this.handleClick}>\r\n                  Save\r\n                </button> */}\r\n                {/* button that links to the main page using link library  */}\r\n                <Link \r\n                  to={\"/main\"} \r\n                  state={this.state}\r\n                  className=\"btn btn-primary\">Save</Link>\r\n              </div>\r\n            </form>\r\n             {/* BUTTON TO GO NAVIGATE TO THE MAIN PAGE */}\r\n            {/* <p>\r\n                <button onClick={() => this.props.navigate(\"/main\")}>Go to MAIN</button>\r\n            </p> */}\r\n            {/* <p>\r\n              <button onClick={this.props.navigate(\"/main\")}>\r\n                MAIN PAGE\r\n              </button>\r\n            </p> */}\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n    \r\n\r\n// function WithNavigate(props) {\r\n//   let navigate = useNavigate();\r\n//   return <WordSearch {...props} navigate={navigate} />\r\n// }\r\n\r\nexport default WordSearch;\r\n\r\n\r\n    // const [query, setQuery] = useState(\"\");\r\n    // console.log(query);\r\n//     const searchPhotos = async (e) => \r\n//     {\r\n//         e.preventDefault();\r\n//         console.log(\"Submitting the Form\")\r\n//     };\r\n\r\n\r\n\r\n//  function WordSearch() {\r\n//     const [checked, setChecked] = React.useState(false);\r\n\r\n//     const handleChange = () => {\r\n//         setChecked(!checked);\r\n//     }\r\n\r\n//     const unsplash = new Unsplash({\r\n//         accessKey: \"your_Access_Key\",\r\n//       }\r\n//     );\r\n\r\n//     const [state, setState] = React.useState();\r\n\r\n\r\n    // const [word, setWord] = useState(\"\");\r\n    // console.log(word);\r\n\r\n\r\n    // render() {\r\n    //     return (\r\n    //     //  className=\"Words\">\r\n    //          className=\"heading-container\">\r\n    //             className=\"title\">What are you Feeling?</h1> \r\n    //         v>\r\n    //          className=\"words-container\">\r\n    //             m onSubmit={this.onSubmit}>\r\n    //                  className=\"form-check\">\r\n    //                     el className=\"form-check-label\">\r\n    //                     ut type=\"checkbox\"\r\n    //                         ked={this.state.isHappy}\r\n    //                         ange={this.onChangeHappy}\r\n    //                         sName=\"form-check-input\"\r\n                        \r\n    //                     y\r\n    //                     bel>\r\n    //                 v>\r\n    //                  className=\"form-check\">\r\n    //                     el className=\"form-check-label\">\r\n    //                     ut type=\"checkbox\"\r\n    //                         ked={this.state.isSad}\r\n    //                         ange={this.onChangeSad}\r\n    //                         sName=\"form-check-input\"\r\n                        \r\n                        // \r\n    //                     bel>\r\n    //                 v>\r\n    //                  className=\"form-check\">\r\n    //                     el className=\"form-check-label\">\r\n    //                     ut type=\"checkbox\"\r\n    //                         ked={this.state.isMad}\r\n    //                         ange={this.onChangeMad}\r\n    //                         sName=\"form-check-input\"\r\n                        \r\n                        // \r\n    //                     bel>\r\n    //                 v>\r\n    //                  className=\"form-check\">\r\n    //                     el className=\"form-check-label\">\r\n    //                     ut type=\"checkbox\"\r\n    //                         ked={this.state.isExcited}\r\n    //                         ange={this.onChangeExcited}\r\n    //                         sName=\"form-check-input\"\r\n                        \r\n    //                     ted\r\n    //                     bel>\r\n    //                 v>\r\n    //                  className=\"form-check\">\r\n    //                     el className=\"form-check-label\">\r\n    //                     ut type=\"checkbox\"\r\n    //                         ked={this.state.isLonely}\r\n    //                         ange={this.onChangeLonely}\r\n    //                         sName=\"form-check-input\"\r\n                        \r\n    //                     ly\r\n    //                     bel>\r\n    //                 v>\r\n    //                  className=\"form-group\">\r\n    //                     ton className=\"btn btn-success\">\r\n                        // \r\n    //                     tton>\r\n    //                 v>\r\n    //             rm>\r\n    //             BUNCH OF CHECKBOXES WITH WORDS TO SELECT and also a SUBMIT BUTTON to send the results and stuff \r\n    //             m>\r\n    //                 >\r\n    //                     ckbox \r\n    //                         l=\"happy :)\"\r\n    //                         e={checked}\r\n    //                         ange={handleChange}\r\n                        \r\n    //                 v> \r\n    //                  v>\r\n    //                     ton type=\"submit\">Submit</button>\r\n    //                 v> \r\n    //                 s \"My Value\" checked? {checked.toString()}</p>\r\n    //             rm> */}\r\n    //                 </div>\r\n                \r\n    //                 // </div>\r\n    //         );\r\n    //     }\r\n    // }\r\n    \r\n//export default WordSearch;\r\n\r\n// const Checkbox = ({ label, value, onChange }) => {\r\n//     return (\r\n//       <label>\r\n//         <input type=\"checkbox\" checked={value} onChange={onChange} />\r\n//         {label}\r\n//       </label>\r\n//     );\r\n//   };\r\n\r\n\r\n\r\n  // return (//does that <> do something? \r\n  //   <>  \r\n  //     <form className=\"form\">\r\n  //       <label className=\"label\" htmlFor=\"query\">\r\n  //         {\" \"}\r\n  //         📷\r\n  //       </label>\r\n  //       <input\r\n  //         type=\"text\"\r\n  //         name=\"query\"\r\n  //         className=\"input\"\r\n  //         placeholder={`Try \"dog\" or \"apple\"`}\r\n  //         value={query}\r\n  //         onChange={(e) => setQuery(e.target.value)}\r\n  //       />\r\n  //       <button type=\"submit\" className=\"button\">\r\n  //         Search\r\n  //       </button>\r\n  //     </form>\r\n  //   </>\r\n  // );\r\n// }\r\n\r\n/* import React, { useState } from \"react\";\r\n\r\nfunction WordSearch() {\r\n    \r\nreturn (\r\n <div>\r\n </div>\r\n);\r\n}\r\nexport default WordSearch;  */\r\n// export default WordSearch;","C:\\Users\\acer\\Desktop\\Cap\\client\\src\\components\\Home\\home.js",[],[],"C:\\Users\\acer\\Desktop\\Cap\\client\\src\\models\\Emotions.js",[],[],"C:\\Users\\acer\\Desktop\\Cap\\client\\src\\components\\Form\\Form.js",["146","147","148","149"],[],"import React, {useReducer, useState} from 'react'\r\nimport { useNavigate, Link} from \"react-router-dom\";\r\n\r\nfunction setQuery (string){\r\n    console.log(\"setting up qeur\")\r\n}\r\n\r\nconst formReducer = (state, event) => {\r\n    return {\r\n      ...state,\r\n      [event.name]: event.value\r\n    }\r\n}\r\n\r\nexport default function Form() {\r\n  const [formData, setFormData] = useReducer(formReducer, {})\r\n//   const [Happy, setHappy] = useState(\"\")\r\n//   const [Sad, setSad] = useState(\"\")\r\n//   const [Mad, setMad] = useState(\"\")\r\n//   const [Excited, setExcited] = useState(\"\")\r\n//   const [Lonely, setLonely] = useState(\"\")\r\n  const [submitting, setSubmitting] = useState(false);\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n    setSubmitting(true);\r\n\r\n    setTimeout(() => {\r\n      setSubmitting(false);\r\n    }, 3000);\r\n  }\r\n  const handleChange = event => {\r\n    console.log(\"here\");\r\n    setFormData({\r\n        name: event.target.name,\r\n        value: event.target.value,\r\n    //   Happy: event.target.Happy,\r\n    //   Sad: event.target.Sad,\r\n    //   Mad: event.target.Mad,\r\n    //   Excited: event.target.Excited,\r\n    //   Lonely: event.target.Lonely,\r\n\r\n    });\r\n  }\r\n//   const onSubmit = ()=>{\r\n//     alert(\"form submitted\")  \r\n//   };\r\n\r\n    return (\r\n    <div>\r\n       \r\n       <form onSubmit = {handleSubmit}>\r\n           <label>\r\n               <input type = \"checkbox\" \r\n               name = \"Happy\"\r\n               onChange = {handleChange}\r\n               \r\n               />\r\n               Happy\r\n           </label>\r\n           <br></br>\r\n           <label>\r\n               <input type = \"checkbox\"\r\n               name = \"Sad\"\r\n               onChange = {handleChange}\r\n               \r\n               />\r\n               Sad\r\n                \r\n           </label>\r\n           <br></br>\r\n           <label>\r\n               <input type = \"checkbox\"\r\n                name = \"Mad\"\r\n                onChange = {handleChange}\r\n                \r\n               />\r\n                Mad\r\n           </label>\r\n           <br></br>\r\n           <label>\r\n               <input type = \"checkbox\"\r\n               name = \"Excited\"\r\n               onChange = {handleChange}\r\n\r\n               />\r\n                Excited\r\n           </label>\r\n           <br></br>\r\n           <label>\r\n               <input type = \"checkbox\"\r\n               name = \"Lonely\"\r\n               onChange = {handleChange}\r\n               \r\n               />\r\n                Lonely\r\n           </label>\r\n           <br></br>\r\n           <Link \r\n            to={{\r\n              pathname: \"/main\", \r\n              state: {\r\n              test: \"this is a test\",\r\n              },\r\n          }} className=\"btn btn-primary\">Save</Link>\r\n\r\n       </form>\r\n        \r\n\r\n\r\n        \r\n    </div>\r\n  \r\n  )\r\n}\r\n","C:\\Users\\acer\\Desktop\\Cap\\client\\src\\components\\Search\\searchbar.js",["150","151","152"],[],"import React, { Component } from 'react'\r\nimport searchQuery from './searchQuery'\r\nimport { createApi } from \"unsplash-js\";\r\nconst handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // searchPhotos();\r\n};\r\nconst api = createApi({\r\n    // Don't forget to set your access token here!\r\n    // See https://unsplash.com/developers\r\n    accessKey: \"p55OV837XTRngIgJA4phnnQHufPJowmk9Fq7vXaCYes\"\r\n  });\r\n\r\nexport default class searchbar extends Component {\r\n    \r\n    render() {\r\n    return (\r\n      <div>searchbar\r\n          \r\n\r\n\r\n\r\n      </div>\r\n      \r\n    )\r\n  }\r\n}\r\n\r\n","C:\\Users\\acer\\Desktop\\Cap\\client\\src\\components\\Search\\searchQuery.js",[],[],"C:\\Users\\acer\\Desktop\\Cap\\client\\src\\pages\\Login.js",[],[],"C:\\Users\\acer\\Desktop\\Cap\\client\\src\\pages\\User.js",[],[],"C:\\Users\\acer\\Desktop\\Cap\\client\\src\\Spotistuff\\Login.js",[],[],"C:\\Users\\acer\\Desktop\\Cap\\client\\src\\Spotistuff\\Details.js",[],[],"C:\\Users\\acer\\Desktop\\Cap\\client\\src\\Spotistuff\\Search.js",[],[],"C:\\Users\\acer\\Desktop\\Cap\\client\\src\\Spotistuff\\SearchAndSearchRes.js",["153"],[],"import React, {useState, useRef, memo, useCallback} from 'react';\r\nimport Online from './Online';\r\nimport Search from './Search';\r\n\r\nimport axios from 'axios';\r\n\r\nconst SearchAndSearchRes = memo(props=>{\r\n  const [searchRes, setSearchRes] = useState();\r\n  const inputRef = useRef();\r\n\r\n  const changeSearchRes = useCallback(query =>{\r\n    if(query){\r\n      axios(`https://api.spotify.com/v1/search?limit=15&type=track&q=${query}`, {\r\n          method: 'GET',\r\n          headers: {'Authorization' : 'Bearer ' + props.logInfo}\r\n        })\r\n        .then((response) => {\r\n          if(response.data.tracks.items.length){\r\n            setSearchRes(response.data);\r\n          }\r\n          else{\r\n            setSearchRes(query);\r\n          }\r\n        })\r\n    }\r\n    else{\r\n      setSearchRes(null);\r\n    }\r\n  }, [searchRes])\r\n\r\n  return(\r\n    <>\r\n      <Search class=\"SearchOnline\" placeh=\"Search for a song...\" inputRef={inputRef} changeSearchRes={changeSearchRes}/>\r\n      <Online songs={searchRes} logInfo={props.logInfo} playlists = {props.playlists} getPlaylist={props.getPlaylist} playlistTrack={props.playlistTrack} setTracks={props.setTracks} tracks={props.tracks} setDispPlaylist={props.setDispPlaylist} inputRef={inputRef} />\r\n    </>\r\n  )\r\n})\r\n\r\nexport default SearchAndSearchRes;\r\n","C:\\Users\\acer\\Desktop\\Cap\\client\\src\\Spotistuff\\Playlists.js",[],[],"C:\\Users\\acer\\Desktop\\Cap\\client\\src\\Spotistuff\\Songs.js",["154"],[],"import React, {memo, useMemo} from 'react';\r\nimport '../Css/Songs.css';\r\nimport axios from 'axios';\r\n\r\nconst Songs = memo(props=>{\r\n  let curTracks;\r\n  //console.log(\"SongsComponent\");\r\n  document.getElementsByClassName(\"SearchPlaylist\")[0].style.visibility=useMemo(()=>\"visible\", [props.playlists.current.listOfPlaylistsFromAPI]);\r\n\r\n  const search=(rows, query)=>{\r\n    return rows.filter(row=>row.track.name.toLowerCase().indexOf(query.toLowerCase()) > -1)\r\n  };\r\n\r\n  function setColor(artist, name){\r\n    if(props.tracks.selectedTrack.name===name && props.tracks.selectedTrack.artists[0].name===artist){\r\n      return \"SongsButtonSelected\";\r\n    }\r\n    return \"SongsButton\";\r\n  }\r\n\r\n  const clickSong= e=> {\r\n    if(!props.playing)\r\n      props.setPlaying(true);\r\n    if(e.target.id===props.tracks.selectedTrack.id){\r\n      axios(`https://api.spotify.com/v1/me/player/seek?position_ms=${0}`, {\r\n        method: \"PUT\",\r\n        headers: {'Authorization' : 'Bearer ' + props.logInfo}\r\n      })\r\n    }\r\n    else{\r\n      props.setTracks({selectedTrack: search(props.dispPlaylist, props.query)[e.target.value].track, listOfTracksFromApi: props.dispPlaylist});\r\n      props.playlistTrack.current=props.playlists.current.selectedPlaylist;\r\n    }\r\n  };\r\n\r\n  const deleteSong= e=>{\r\n    axios(`https://api.spotify.com/v1/playlists/${props.playlists.current.selectedPlaylist}/tracks`, {\r\n      method: \"DELETE\",\r\n      headers: {'Authorization' : 'Bearer ' + props.logInfo},\r\n      data: { \"tracks\": [{\"uri\": e.currentTarget.value}]}\r\n    })\r\n    .then (async _ => {\r\n      curTracks = await props.getPlaylist(0, curTracks, props.playlists.current.selectedPlaylist);\r\n      props.setDispPlaylist(curTracks);\r\n      if(props.playlistTrack.current===props.playlists.current.selectedPlaylist){\r\n        props.setTracks({selectedTrack: props.tracks.selectedTrack, listOfTracksFromApi: curTracks});\r\n      }\r\n    });\r\n  }\r\n\r\n  return(\r\n    <div className=\"SongsTable\">\r\n      <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\"/ >\r\n      {search(props.dispPlaylist, props.query).length===0 && <li className=\"NotFound\">'{props.query}' does not exist</li>}\r\n      <table>\r\n        <tbody>\r\n          {search(props.dispPlaylist, props.query).map((item, idx) => ( item.track.available_markets.length>0 &&\r\n            <tr key={idx}>\r\n              {<td className=\"ButtonsParent\"><button className={setColor(item.track.artists[0].name, item.track.name)} id={item.track.id} onClick={clickSong} value={idx}> {item.track.name}</button>\r\n                <button className=\"DelButton\" onClick={deleteSong} value={item.track.uri}>\r\n                  <i className=\"fa fa-trash\"></i><div className=\"DelMesage\" >&nbsp;Delete</div></button>\r\n              </td>}\r\n            </tr>\r\n        )) }\r\n        </tbody>\r\n\r\n      </table>\r\n    </div>\r\n  );\r\n})\r\n\r\nexport default Songs;\r\n","C:\\Users\\acer\\Desktop\\Cap\\client\\src\\Spotistuff\\Online.js",["155"],[],"import React, {useState, useEffect, memo, useRef} from 'react';\r\nimport '../Css/Online.css';\r\nimport axios from 'axios';\r\n\r\nconst Online = memo(props=> {\r\n  //console.log(\"Online Component\");\r\n  const [open, setOpen]=useState(false);\r\n  const [onlineClicked, setOnlineClicked]=useState(false);\r\n  const addingTrack=useRef();\r\n  const userInfo=useRef();\r\n  let curTracks;\r\n\r\n  useEffect(()=> {\r\n    //console.log(\"In useEffect\")\r\n    axios('https://api.spotify.com/v1/me', {\r\n        method: 'GET',\r\n        headers: {'Authorization' : 'Bearer ' + props.logInfo}\r\n      })\r\n      .then((response) => {\r\n        userInfo.current=response.data;\r\n      })\r\n  },[props.logInfo]);\r\n\r\n  useEffect(() => {\r\n    const handleClickInside = event=>{\r\n      if(open && props.inputRef.current.contains(event.target)){\r\n        setOpen(false);\r\n      }\r\n      else if(props.inputRef.current.contains(event.target)){\r\n        setOnlineClicked(true);\r\n      }\r\n      else if (document.activeElement.className!==\"AddButton\"){\r\n        setOnlineClicked(false);\r\n        if(open){\r\n          setOpen(false);\r\n        }\r\n      }\r\n    }\r\n    document.addEventListener(\"click\", handleClickInside);\r\n    return () => {\r\n      document.removeEventListener(\"click\", handleClickInside);\r\n    };\r\n  }, [open])\r\n\r\n  const addSongClicked=async addingId=>{\r\n    let addSong=false;\r\n    curTracks = await props.getPlaylist(0, curTracks, addingId);\r\n    for(const item of curTracks){\r\n      if(item.track.uri===addingTrack.current){\r\n        alert(\"Song already in the playlist\")\r\n        break;\r\n      }\r\n      else if(item===curTracks[curTracks.length-1]){\r\n        addSong=true;\r\n      }\r\n    }\r\n    if(addSong){\r\n      curTracks=null;\r\n      axios(`https://api.spotify.com/v1/playlists/${addingId}/tracks`, {\r\n        method: \"POST\",\r\n        headers: {'Authorization' : 'Bearer ' + props.logInfo},\r\n        data: { \"uris\": [addingTrack.current]}\r\n      })\r\n      .then (async _ => {\r\n        curTracks = await props.getPlaylist(0, curTracks, addingId);\r\n        if(addingId===props.playlists.current.selectedPlaylist){\r\n          props.setDispPlaylist(curTracks);\r\n          if(props.playlistTrack.current===props.playlists.current.selectedPlaylist){\r\n            props.setTracks({selectedTrack: props.tracks.selectedTrack, listOfTracksFromApi: curTracks});\r\n          }\r\n        }\r\n        else if(props.playlistTrack.current===addingId){\r\n          props.setTracks({selectedTrack: props.tracks.selectedTrack, listOfTracksFromApi: curTracks});\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  const seePlaylists=e=>{\r\n    document.getElementById(\"PopUp\").style.marginTop=e.currentTarget.id+\"px\";\r\n    if(!open || (addingTrack.current && addingTrack.current===e.currentTarget.value)){\r\n      setOpen(!open);\r\n    }\r\n    addingTrack.current=e.currentTarget.value;\r\n  }\r\n\r\n  const addTheSong=e=> {\r\n    addSongClicked(e.target.id);\r\n  };\r\n\r\n  return (onlineClicked && props.songs ?(\r\n    <div className=\"AboveOnline\">\r\n      <div className= \"Online\">\r\n        <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\"/ >\r\n        {typeof props.songs ===\"object\" ?\r\n          props.songs.tracks.items.map((item, idx) =>\r\n            <div className=\"AddParent\" key={idx}><button id={idx*23+57} value = {item.uri} onClick={seePlaylists} className=\"AddButton\">\r\n              <i className=\"fa fa-plus\"></i><div className=\"AddMessage\" >&nbsp;Add to playlist</div></button>{item.name}: {item.artists[0].name}</div>) :\r\n          <div> '{props.songs}' does not exist </div>}\r\n      </div>\r\n      <div id =\"PopUp\" className=\"PopUp\">\r\n      {open && props.playlists.current.listOfPlaylistsFromAPI.map((item, idx) => userInfo.current.display_name===item.owner.display_name &&\r\n        <button className=\"AddToPlay\" key={idx} id = {item.id} onClick={addTheSong}>{item.name}</button>\r\n      )}\r\n      </div>\r\n    </div>): null\r\n  );\r\n})\r\nexport default Online;\r\n",{"ruleId":"156","severity":1,"message":"157","line":9,"column":3,"nodeType":"158","messageId":"159","endLine":9,"endColumn":7},{"ruleId":"156","severity":1,"message":"160","line":1,"column":8,"nodeType":"158","messageId":"159","endLine":1,"endColumn":16},{"ruleId":"161","severity":1,"message":"162","line":24,"column":51,"nodeType":"163","messageId":"164","endLine":24,"endColumn":53},{"ruleId":"165","severity":1,"message":"166","line":80,"column":11,"nodeType":"167","endLine":80,"endColumn":53},{"ruleId":"165","severity":1,"message":"166","line":84,"column":15,"nodeType":"167","endLine":87,"endColumn":17},{"ruleId":"165","severity":1,"message":"166","line":89,"column":15,"nodeType":"167","endLine":92,"endColumn":17},{"ruleId":"168","severity":1,"message":"169","line":96,"column":9,"nodeType":"167","messageId":"170","endLine":100,"endColumn":10,"fix":"171"},{"ruleId":"172","severity":1,"message":"173","line":170,"column":13,"nodeType":"174","endLine":182,"endColumn":4},{"ruleId":"175","severity":1,"message":"176","line":175,"column":57,"nodeType":"174","messageId":"177","endLine":176,"endColumn":69},{"ruleId":"161","severity":1,"message":"178","line":176,"column":54,"nodeType":"163","messageId":"164","endLine":176,"endColumn":56},{"ruleId":"172","severity":1,"message":"179","line":182,"column":6,"nodeType":"180","endLine":182,"endColumn":8,"suggestions":"181"},{"ruleId":"172","severity":1,"message":"173","line":244,"column":13,"nodeType":"174","endLine":246,"endColumn":4},{"ruleId":"172","severity":1,"message":"182","line":246,"column":6,"nodeType":"180","endLine":246,"endColumn":8,"suggestions":"183"},{"ruleId":"161","severity":1,"message":"162","line":284,"column":30,"nodeType":"163","messageId":"164","endLine":284,"endColumn":32},{"ruleId":"156","severity":1,"message":"160","line":1,"column":8,"nodeType":"158","messageId":"159","endLine":1,"endColumn":16},{"ruleId":"156","severity":1,"message":"184","line":2,"column":10,"nodeType":"158","messageId":"159","endLine":2,"endColumn":21},{"ruleId":"156","severity":1,"message":"185","line":2,"column":23,"nodeType":"158","messageId":"159","endLine":2,"endColumn":34},{"ruleId":"156","severity":1,"message":"186","line":3,"column":17,"nodeType":"158","messageId":"159","endLine":3,"endColumn":25},{"ruleId":"156","severity":1,"message":"187","line":3,"column":27,"nodeType":"158","messageId":"159","endLine":3,"endColumn":36},{"ruleId":"156","severity":1,"message":"188","line":3,"column":38,"nodeType":"158","messageId":"159","endLine":3,"endColumn":46},{"ruleId":"156","severity":1,"message":"188","line":1,"column":17,"nodeType":"158","messageId":"159","endLine":1,"endColumn":25},{"ruleId":"156","severity":1,"message":"189","line":3,"column":8,"nodeType":"158","messageId":"159","endLine":3,"endColumn":16},{"ruleId":"156","severity":1,"message":"190","line":3,"column":20,"nodeType":"158","messageId":"159","endLine":3,"endColumn":26},{"ruleId":"156","severity":1,"message":"191","line":5,"column":8,"nodeType":"158","messageId":"159","endLine":5,"endColumn":13},{"ruleId":"156","severity":1,"message":"192","line":6,"column":8,"nodeType":"158","messageId":"159","endLine":6,"endColumn":16},{"ruleId":"156","severity":1,"message":"185","line":2,"column":10,"nodeType":"158","messageId":"159","endLine":2,"endColumn":21},{"ruleId":"156","severity":1,"message":"193","line":4,"column":10,"nodeType":"158","messageId":"159","endLine":4,"endColumn":18},{"ruleId":"156","severity":1,"message":"194","line":16,"column":10,"nodeType":"158","messageId":"159","endLine":16,"endColumn":18},{"ruleId":"156","severity":1,"message":"195","line":22,"column":10,"nodeType":"158","messageId":"159","endLine":22,"endColumn":20},{"ruleId":"156","severity":1,"message":"196","line":2,"column":8,"nodeType":"158","messageId":"159","endLine":2,"endColumn":19},{"ruleId":"156","severity":1,"message":"197","line":4,"column":7,"nodeType":"158","messageId":"159","endLine":4,"endColumn":19},{"ruleId":"156","severity":1,"message":"198","line":8,"column":7,"nodeType":"158","messageId":"159","endLine":8,"endColumn":10},{"ruleId":"172","severity":1,"message":"199","line":29,"column":6,"nodeType":"180","endLine":29,"endColumn":17,"suggestions":"200"},{"ruleId":"172","severity":1,"message":"201","line":8,"column":96,"nodeType":"180","endLine":8,"endColumn":144,"suggestions":"202"},{"ruleId":"172","severity":1,"message":"203","line":43,"column":6,"nodeType":"180","endLine":43,"endColumn":12,"suggestions":"204"},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'ReactDOM' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","noTargetBlankWithoutNoreferrer",{"range":"205","text":"206"},"react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'prevResult'.","unsafeRefs","Expected '===' and instead saw '=='.","React Hook useEffect has a missing dependency: 'props.emotions'. Either include it or remove the dependency array.","ArrayExpression",["207"],"React Hook useEffect has a missing dependency: 'state'. Either include it or remove the dependency array.",["208"],"'useLocation' is defined but never used.","'useNavigate' is defined but never used.","'Fragment' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'Unsplash' is defined but never used.","'toJson' is defined but never used.","'axios' is defined but never used.","'MainPage' is defined but never used.","'setQuery' is defined but never used.","'formData' is assigned a value but never used.","'submitting' is assigned a value but never used.","'searchQuery' is defined but never used.","'handleSubmit' is assigned a value but never used.","'api' is assigned a value but never used.","React Hook useCallback has a missing dependency: 'props.logInfo'. Either include it or remove the dependency array.",["209"],"React Hook useMemo has an unnecessary dependency: 'props.playlists.current.listOfPlaylistsFromAPI'. Either exclude it or remove the dependency array.",["210"],"React Hook useEffect has a missing dependency: 'props.inputRef'. Either include it or remove the dependency array.",["211"],[3596,3596]," rel=\"noreferrer\"",{"desc":"212","fix":"213"},{"desc":"214","fix":"215"},{"desc":"216","fix":"217"},{"desc":"218","fix":"219"},{"desc":"220","fix":"221"},"Update the dependencies array to be: [props.emotions]",{"range":"222","text":"223"},"Update the dependencies array to be: [state]",{"range":"224","text":"225"},"Update the dependencies array to be: [props.logInfo]",{"range":"226","text":"227"},"Update the dependencies array to be: []",{"range":"228","text":"229"},"Update the dependencies array to be: [open, props.inputRef]",{"range":"230","text":"231"},[6609,6611],"[props.emotions]",[8466,8468],"[state]",[807,818],"[props.logInfo]",[281,329],"[]",[1274,1280],"[open, props.inputRef]"]